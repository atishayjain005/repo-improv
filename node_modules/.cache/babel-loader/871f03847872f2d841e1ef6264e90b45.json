{"ast":null,"code":"var _BodyRepositoryNameQuery,\n    _jsxFileName = \"/home/akshay/Atishay/appointy-screening/src/route/GitData.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { RelayEnvironmentProvider, loadQuery, usePreloadedQuery } from 'react-relay/hooks';\nimport RelayEnvironment from '../RelayEnvironment';\nimport { Button, Container, Box, Typography } from \"@mui/material\";\nimport DoubleArrowIcon from \"@mui/icons-material/DoubleArrow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Suspense\n} = React;\nconst RepositoryNameQuery = _BodyRepositoryNameQuery !== void 0 ? _BodyRepositoryNameQuery : (_BodyRepositoryNameQuery = require(\"./__generated__/BodyRepositoryNameQuery.graphql\"), _BodyRepositoryNameQuery.hash && _BodyRepositoryNameQuery.hash !== \"7788f646fa335970c463c923e28677ad\" && console.error(\"The definition of 'BodyRepositoryNameQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _BodyRepositoryNameQuery);\nconst preloadedQuery = loadQuery(RelayEnvironment, RepositoryNameQuery, {\n  \"usr\": localStorage.getItem(\"user\")\n});\n\nfunction GitData(props) {\n  _s();\n\n  const data = usePreloadedQuery(RepositoryNameQuery, props.preloadedQuery);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"lightgrey\",\n        my: 10,\n        sx: {\n          fontSize: 72,\n          fontWeight: 900\n        },\n        children: [\"Make changes in your GitHub repository directly\", /*#__PURE__*/_jsxDEV(Typography, {\n          mt: 2,\n          children: \"Just a simple web-app where you can edit the name of your GitHub repository or Delete it. You can make some minor changes.Just a simple web-app where you can edit the name of your GitHub repository or Delete it. You can make some minor changesJust a simple web-app where you can edit the name of your GitHub repository or Delete it. You can make some minor changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: data.user.repositories.nodes.map(data => {\n          return /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 27\n              }, this), console.log(data.name)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 23\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n}\n\n_s(GitData, \"gOoAgDlVPdxEXFj+8uugLFK2myc=\", false, function () {\n  return [usePreloadedQuery];\n});\n\n_c = GitData;\n\nfunction GitDataRoot(props) {\n  return /*#__PURE__*/_jsxDEV(RelayEnvironmentProvider, {\n    environment: RelayEnvironment,\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: 'Loading...',\n      children: /*#__PURE__*/_jsxDEV(GitData, {\n        preloadedQuery: preloadedQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}\n\n_c2 = GitDataRoot;\nexport default GitDataRoot;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GitData\");\n$RefreshReg$(_c2, \"GitDataRoot\");","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/src/route/GitData.jsx"],"names":["React","RelayEnvironmentProvider","loadQuery","usePreloadedQuery","RelayEnvironment","Button","Container","Box","Typography","DoubleArrowIcon","Suspense","RepositoryNameQuery","preloadedQuery","localStorage","getItem","GitData","props","data","fontSize","fontWeight","user","repositories","nodes","map","name","console","log","GitDataRoot"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,wBADF,EAEEC,SAFF,EAGEC,iBAHF,QAIO,mBAJP;AAKA,OAAOC,gBAAP,MAA6B,qBAA7B;AAEA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,GAA5B,EAAiCC,UAAjC,QAAmD,eAAnD;AACA,OAAOC,eAAP,MAA4B,iCAA5B;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAeV,KAArB;AAEA,MAAMW,mBAAmB,scAAzB;AAeA,MAAMC,cAAc,GAAGV,SAAS,CAACE,gBAAD,EAAmBO,mBAAnB,EAAwC;AACxE,SAAOE,YAAY,CAACC,OAAb,CAAqB,MAArB;AADiE,CAAxC,CAAhC;;AAIA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAMC,IAAI,GAAGd,iBAAiB,CAACQ,mBAAD,EAAsBK,KAAK,CAACJ,cAA5B,CAA9B;AAEI,sBACI,QAAC,SAAD;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,EAAE,EAAE,EAFN;AAGE,QAAA,EAAE,EAAE;AAAEM,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,UAAU,EAAE;AAA5B,SAHN;AAAA,mFAME,QAAC,UAAD;AAAY,UAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE,QAAC,GAAD;AAAA,kBACEF,IAAI,CAACG,IAAL,CAAUC,YAAV,CAAuBC,KAAvB,CAA6BC,GAA7B,CAAkCN,IAAD,IAAU;AACzC,8BACE,QAAC,GAAD;AAAA,mCACE,QAAC,GAAD;AAAA,sCACE,QAAC,UAAD;AAAA,0BAAaA,IAAI,CAACO;AAAlB;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGC,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACO,IAAjB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATD;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCP;;GArCQT,O;UACQZ,iB;;;KADRY,O;;AAuCT,SAASY,WAAT,CAAqBX,KAArB,EAA4B;AAExB,sBACE,QAAC,wBAAD;AAA0B,IAAA,WAAW,EAAEZ,gBAAvC;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,YAApB;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,cAAc,EAAEQ;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;MATMe,W;AAWP,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport graphql from 'babel-plugin-relay/macro';\nimport {\n  RelayEnvironmentProvider,\n  loadQuery,\n  usePreloadedQuery,\n} from 'react-relay/hooks';\nimport RelayEnvironment from '../RelayEnvironment';\n\nimport { Button, Container, Box, Typography } from \"@mui/material\";\nimport DoubleArrowIcon from \"@mui/icons-material/DoubleArrow\";\n\nconst { Suspense } = React;\n\nconst RepositoryNameQuery = graphql`\nquery BodyRepositoryNameQuery($usr : String!) {\n  user(login: $usr) {\n    repositories(first: 10, orderBy: { field: CREATED_AT, direction: DESC }) {\n      nodes {\n        name\n        pushedAt\n        id\n      }\n    }\n  }\n}\n`\n\n\nconst preloadedQuery = loadQuery(RelayEnvironment, RepositoryNameQuery, {\n\"usr\": localStorage.getItem(\"user\")\n});\n\nfunction GitData(props) {\n    const data = usePreloadedQuery(RepositoryNameQuery, props.preloadedQuery);\n\n        return (\n            <Container>\n              <Box>\n                <Typography\n                  color=\"lightgrey\"\n                  my={10}\n                  sx={{ fontSize: 72, fontWeight: 900 }}\n                >\n                  Make changes in your GitHub repository directly\n                  <Typography mt={2}>\n                    Just a simple web-app where you can edit the name of your GitHub\n                    repository or Delete it. You can make some minor changes.Just a\n                    simple web-app where you can edit the name of your GitHub repository\n                    or Delete it. You can make some minor changesJust a simple web-app\n                    where you can edit the name of your GitHub repository or Delete it.\n                    You can make some minor changes\n                  </Typography>\n                </Typography>\n                <Box>\n                 {data.user.repositories.nodes.map((data) => {\n                    return (\n                      <Box>\n                        <Box>\n                          <Typography>{data.name}</Typography>\n                          {console.log(data.name)}\n                        </Box>\n                      </Box>\n                    );\n                  })} \n                </Box>\n              </Box>\n            </Container>\n          );\n    \n}\n\nfunction GitDataRoot(props) {\n  \n    return (\n      <RelayEnvironmentProvider environment={RelayEnvironment}>\n        <Suspense fallback={'Loading...'}>\n          <GitData preloadedQuery={preloadedQuery} />\n        </Suspense>\n      </RelayEnvironmentProvider>\n    );\n  }\n  \n  export default GitDataRoot;"]},"metadata":{},"sourceType":"module"}