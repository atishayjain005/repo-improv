{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar React = require('react');\n\nvar ReactRelayContext = require('./ReactRelayContext');\n\nvar ReactRelayQueryRendererContext = require('./ReactRelayQueryRendererContext');\n\nvar useLayoutEffect = React.useLayoutEffect,\n    useState = React.useState,\n    useRef = React.useRef,\n    useMemo = React.useMemo;\n\nvar _require = require('relay-runtime'),\n    createOperationDescriptor = _require.createOperationDescriptor,\n    deepFreeze = _require.deepFreeze,\n    getRequest = _require.getRequest;\n\nvar areEqual = require(\"fbjs/lib/areEqual\");\n\nvar queryRendererContext = {\n  rootIsQueryRenderer: true\n};\n\nfunction useDeepCompare(value) {\n  var latestValue = React.useRef(value);\n\n  if (!areEqual(latestValue.current, value)) {\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(value);\n    }\n\n    latestValue.current = value;\n  }\n\n  return latestValue.current;\n}\n\nfunction ReactRelayLocalQueryRenderer(props) {\n  var environment = props.environment,\n      query = props.query,\n      variables = props.variables,\n      render = props.render;\n  var latestVariables = useDeepCompare(variables);\n  var operation = useMemo(function () {\n    var request = getRequest(query);\n    return createOperationDescriptor(request, latestVariables);\n  }, [query, latestVariables]);\n  var relayContext = useMemo(function () {\n    return {\n      environment: environment\n    };\n  }, [environment]); // Use a ref to prevent rendering twice when data changes\n  // because of props change\n\n  var dataRef = useRef(null);\n\n  var _useState = useState(null),\n      forceUpdate = _useState[1];\n\n  var cleanupFnRef = useRef(null);\n  var snapshot = useMemo(function () {\n    environment.check(operation);\n    var res = environment.lookup(operation.fragment);\n    dataRef.current = res.data; // Run effects here so that the data can be retained\n    // and subscribed before the component commits\n\n    var retainDisposable = environment.retain(operation);\n    var subscribeDisposable = environment.subscribe(res, function (newSnapshot) {\n      dataRef.current = newSnapshot.data;\n      forceUpdate(dataRef.current);\n    });\n    var disposed = false;\n\n    function nextCleanupFn() {\n      if (!disposed) {\n        disposed = true;\n        cleanupFnRef.current = null;\n        retainDisposable.dispose();\n        subscribeDisposable.dispose();\n      }\n    }\n\n    if (cleanupFnRef.current) {\n      cleanupFnRef.current();\n    }\n\n    cleanupFnRef.current = nextCleanupFn;\n    return res;\n  }, [environment, operation]);\n  useLayoutEffect(function () {\n    var cleanupFn = cleanupFnRef.current;\n    return function () {\n      cleanupFn && cleanupFn();\n    };\n  }, [snapshot]);\n  return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n    value: relayContext\n  }, /*#__PURE__*/React.createElement(ReactRelayQueryRendererContext.Provider, {\n    value: queryRendererContext\n  }, render({\n    props: dataRef.current\n  })));\n}\n\nmodule.exports = ReactRelayLocalQueryRenderer;","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/node_modules/react-relay/lib/ReactRelayLocalQueryRenderer.js"],"names":["React","require","ReactRelayContext","ReactRelayQueryRendererContext","useLayoutEffect","useState","useRef","useMemo","_require","createOperationDescriptor","deepFreeze","getRequest","areEqual","queryRendererContext","rootIsQueryRenderer","useDeepCompare","value","latestValue","current","process","env","NODE_ENV","ReactRelayLocalQueryRenderer","props","environment","query","variables","render","latestVariables","operation","request","relayContext","dataRef","_useState","forceUpdate","cleanupFnRef","snapshot","check","res","lookup","fragment","data","retainDisposable","retain","subscribeDisposable","subscribe","newSnapshot","disposed","nextCleanupFn","dispose","cleanupFn","createElement","Provider","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar React = require('react');\n\nvar ReactRelayContext = require('./ReactRelayContext');\n\nvar ReactRelayQueryRendererContext = require('./ReactRelayQueryRendererContext');\n\nvar useLayoutEffect = React.useLayoutEffect,\n    useState = React.useState,\n    useRef = React.useRef,\n    useMemo = React.useMemo;\n\nvar _require = require('relay-runtime'),\n    createOperationDescriptor = _require.createOperationDescriptor,\n    deepFreeze = _require.deepFreeze,\n    getRequest = _require.getRequest;\n\nvar areEqual = require(\"fbjs/lib/areEqual\");\n\nvar queryRendererContext = {\n  rootIsQueryRenderer: true\n};\n\nfunction useDeepCompare(value) {\n  var latestValue = React.useRef(value);\n\n  if (!areEqual(latestValue.current, value)) {\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(value);\n    }\n\n    latestValue.current = value;\n  }\n\n  return latestValue.current;\n}\n\nfunction ReactRelayLocalQueryRenderer(props) {\n  var environment = props.environment,\n      query = props.query,\n      variables = props.variables,\n      render = props.render;\n  var latestVariables = useDeepCompare(variables);\n  var operation = useMemo(function () {\n    var request = getRequest(query);\n    return createOperationDescriptor(request, latestVariables);\n  }, [query, latestVariables]);\n  var relayContext = useMemo(function () {\n    return {\n      environment: environment\n    };\n  }, [environment]); // Use a ref to prevent rendering twice when data changes\n  // because of props change\n\n  var dataRef = useRef(null);\n\n  var _useState = useState(null),\n      forceUpdate = _useState[1];\n\n  var cleanupFnRef = useRef(null);\n  var snapshot = useMemo(function () {\n    environment.check(operation);\n    var res = environment.lookup(operation.fragment);\n    dataRef.current = res.data; // Run effects here so that the data can be retained\n    // and subscribed before the component commits\n\n    var retainDisposable = environment.retain(operation);\n    var subscribeDisposable = environment.subscribe(res, function (newSnapshot) {\n      dataRef.current = newSnapshot.data;\n      forceUpdate(dataRef.current);\n    });\n    var disposed = false;\n\n    function nextCleanupFn() {\n      if (!disposed) {\n        disposed = true;\n        cleanupFnRef.current = null;\n        retainDisposable.dispose();\n        subscribeDisposable.dispose();\n      }\n    }\n\n    if (cleanupFnRef.current) {\n      cleanupFnRef.current();\n    }\n\n    cleanupFnRef.current = nextCleanupFn;\n    return res;\n  }, [environment, operation]);\n  useLayoutEffect(function () {\n    var cleanupFn = cleanupFnRef.current;\n    return function () {\n      cleanupFn && cleanupFn();\n    };\n  }, [snapshot]);\n  return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n    value: relayContext\n  }, /*#__PURE__*/React.createElement(ReactRelayQueryRendererContext.Provider, {\n    value: queryRendererContext\n  }, render({\n    props: dataRef.current\n  })));\n}\n\nmodule.exports = ReactRelayLocalQueryRenderer;"]},"metadata":{},"sourceType":"script"}