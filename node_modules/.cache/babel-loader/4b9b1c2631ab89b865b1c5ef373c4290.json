{"ast":null,"code":"/* import { useContext , useState } from 'react'; */\nconst FetchGraphQL = async (text, variables) => {\n  const TOKEN = \"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\";\n  const t = localStorage.getItem(token);\n  console.log(t); // Fetch data from GitHub's GraphQL API:\n\n  const response = await fetch('https://api.github.com/graphql', {\n    method: 'POST',\n    headers: {\n      Authorization: `bearer ${TOKEN}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: text,\n      variables\n    })\n  }); // Get the response as JSON\n\n  return await response.json();\n};\n\n_c = FetchGraphQL;\nexport default FetchGraphQL;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchGraphQL\");","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/src/FetchGraphQL.jsx"],"names":["FetchGraphQL","text","variables","TOKEN","t","localStorage","getItem","token","console","log","response","fetch","method","headers","Authorization","body","JSON","stringify","query","json"],"mappings":"AACA;AACA,MAAMA,YAAY,GAAG,OAAMC,IAAN,EAAYC,SAAZ,KAA0B;AAE7C,QAAMC,KAAK,GAAG,0CAAd;AACA,QAAMC,CAAC,GAAGC,YAAY,CAACC,OAAb,CAAqBC,KAArB,CAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ,EAJ6C,CAK7C;;AACA,QAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,IAAAA,MAAM,EAAE,MADqD;AAE7DC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASX,KAAM,EADxB;AAEP,sBAAgB;AAFT,KAFoD;AAM7DY,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,KAAK,EAAEjB,IADY;AAEnBC,MAAAA;AAFmB,KAAf;AANuD,GAAnC,CAA5B,CAN6C,CAkB7C;;AACA,SAAO,MAAMQ,QAAQ,CAACS,IAAT,EAAb;AACD,CApBD;;KAAMnB,Y;AAsBN,eAAeA,YAAf","sourcesContent":["\n/* import { useContext , useState } from 'react'; */\nconst FetchGraphQL = async(text, variables) => {\n\n  const TOKEN = \"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\";\n  const t = localStorage.getItem(token)\n  console.log(t)\n  // Fetch data from GitHub's GraphQL API:\n  const response = await fetch('https://api.github.com/graphql', {\n    method: 'POST',\n    headers: {\n      Authorization: `bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: text,\n      variables,\n    }),\n  });\n\n  // Get the response as JSON\n  return await response.json();\n}\n\nexport default FetchGraphQL;"]},"metadata":{},"sourceType":"module"}