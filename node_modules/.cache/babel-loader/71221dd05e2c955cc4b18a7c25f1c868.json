{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* import { useContext , useState } from 'react'; */\nimport TokenContext from \"./context/Token/TokenContext\";\nimport React from 'react';\nconst {\n  useContext\n} = React;\n\nconst FetchGraphQL = async (text, variables) => {\n  _s();\n\n  const TOKEN = useContext(TokenContext); // Fetch data from GitHub's GraphQL API:\n\n  const response = await fetch('https://api.github.com/graphql', {\n    method: 'POST',\n    headers: {\n      Authorization: `bearer ${TOKEN}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: text,\n      variables\n    })\n  }); // Get the response as JSON\n\n  return await response.json();\n};\n\n_s(FetchGraphQL, \"3TeLWg2QhmRvCHj1lAIMo8ak6dA=\");\n\n_c = FetchGraphQL;\nexport default FetchGraphQL;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchGraphQL\");","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/src/FetchGraphQL.jsx"],"names":["TokenContext","React","useContext","FetchGraphQL","text","variables","TOKEN","response","fetch","method","headers","Authorization","body","JSON","stringify","query","json"],"mappings":";;AAAA;AACA,OAAOA,YAAP,MAAyB,8BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAM;AAACC,EAAAA;AAAD,IAAeD,KAArB;;AAGA,MAAME,YAAY,GAAG,OAAMC,IAAN,EAAYC,SAAZ,KAA0B;AAAA;;AAE7C,QAAMC,KAAK,GAAGJ,UAAU,CAACF,YAAD,CAAxB,CAF6C,CAI7C;;AACA,QAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,IAAAA,MAAM,EAAE,MADqD;AAE7DC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASL,KAAM,EADxB;AAEP,sBAAgB;AAFT,KAFoD;AAM7DM,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,KAAK,EAAEX,IADY;AAEnBC,MAAAA;AAFmB,KAAf;AANuD,GAAnC,CAA5B,CAL6C,CAiB7C;;AACA,SAAO,MAAME,QAAQ,CAACS,IAAT,EAAb;AACD,CAnBD;;GAAMb,Y;;KAAAA,Y;AAqBN,eAAeA,YAAf","sourcesContent":["/* import { useContext , useState } from 'react'; */\nimport TokenContext from \"./context/Token/TokenContext\";\nimport React from 'react';\n\n\nconst {useContext} = React;\n\n\nconst FetchGraphQL = async(text, variables) => {\n\n  const TOKEN = useContext(TokenContext);\n\n  // Fetch data from GitHub's GraphQL API:\n  const response = await fetch('https://api.github.com/graphql', {\n    method: 'POST',\n    headers: {\n      Authorization: `bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: text,\n      variables,\n    }),\n  });\n\n  // Get the response as JSON\n  return await response.json();\n}\n\nexport default FetchGraphQL;"]},"metadata":{},"sourceType":"module"}