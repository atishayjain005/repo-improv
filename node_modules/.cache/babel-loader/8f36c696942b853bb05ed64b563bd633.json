{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @emails oncall+relay\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayFeatureFlags = require('./RelayFeatureFlags');\n\nvar isEmptyObject = require('./isEmptyObject');\n\nvar stableCopy = require('./stableCopy');\n\nvar _require = require('../store/RelayModernSelector'),\n    getDataIDsFromFragment = _require.getDataIDsFromFragment,\n    getVariablesFromFragment = _require.getVariablesFromFragment,\n    getSelector = _require.getSelector;\n\nfunction getFragmentIdentifier(fragmentNode, fragmentRef) {\n  var selector = getSelector(fragmentNode, fragmentRef);\n  var fragmentOwnerIdentifier = selector == null ? 'null' : selector.kind === 'SingularReaderSelector' ? selector.owner.identifier : '[' + selector.selectors.map(function (sel) {\n    return sel.owner.identifier;\n  }).join(',') + ']';\n  var fragmentVariables = getVariablesFromFragment(fragmentNode, fragmentRef);\n  var dataIDs = getDataIDsFromFragment(fragmentNode, fragmentRef);\n\n  if (RelayFeatureFlags.ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION) {\n    return fragmentOwnerIdentifier + '/' + fragmentNode.name + '/' + (fragmentVariables == null || isEmptyObject(fragmentVariables) ? '{}' : JSON.stringify(stableCopy(fragmentVariables))) + '/' + (typeof dataIDs === 'undefined' ? 'missing' : dataIDs == null ? 'null' : Array.isArray(dataIDs) ? '[' + dataIDs.join(',') + ']' : dataIDs);\n  } else {\n    var _JSON$stringify;\n\n    return fragmentOwnerIdentifier + '/' + fragmentNode.name + '/' + JSON.stringify(stableCopy(fragmentVariables)) + '/' + ((_JSON$stringify = JSON.stringify(dataIDs)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : 'missing');\n  }\n}\n\nmodule.exports = getFragmentIdentifier;","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/node_modules/relay-runtime/lib/util/getFragmentIdentifier.js"],"names":["RelayFeatureFlags","require","isEmptyObject","stableCopy","_require","getDataIDsFromFragment","getVariablesFromFragment","getSelector","getFragmentIdentifier","fragmentNode","fragmentRef","selector","fragmentOwnerIdentifier","kind","owner","identifier","selectors","map","sel","join","fragmentVariables","dataIDs","ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION","name","JSON","stringify","Array","isArray","_JSON$stringify","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAA/B;;AAEA,IAAIC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA3B;;AAEA,IAAIE,UAAU,GAAGF,OAAO,CAAC,cAAD,CAAxB;;AAEA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,8BAAD,CAAtB;AAAA,IACII,sBAAsB,GAAGD,QAAQ,CAACC,sBADtC;AAAA,IAEIC,wBAAwB,GAAGF,QAAQ,CAACE,wBAFxC;AAAA,IAGIC,WAAW,GAAGH,QAAQ,CAACG,WAH3B;;AAKA,SAASC,qBAAT,CAA+BC,YAA/B,EAA6CC,WAA7C,EAA0D;AACxD,MAAIC,QAAQ,GAAGJ,WAAW,CAACE,YAAD,EAAeC,WAAf,CAA1B;AACA,MAAIE,uBAAuB,GAAGD,QAAQ,IAAI,IAAZ,GAAmB,MAAnB,GAA4BA,QAAQ,CAACE,IAAT,KAAkB,wBAAlB,GAA6CF,QAAQ,CAACG,KAAT,CAAeC,UAA5D,GAAyE,MAAMJ,QAAQ,CAACK,SAAT,CAAmBC,GAAnB,CAAuB,UAAUC,GAAV,EAAe;AAC7K,WAAOA,GAAG,CAACJ,KAAJ,CAAUC,UAAjB;AACD,GAFwI,EAEtII,IAFsI,CAEjI,GAFiI,CAAN,GAEpH,GAFf;AAGA,MAAIC,iBAAiB,GAAGd,wBAAwB,CAACG,YAAD,EAAeC,WAAf,CAAhD;AACA,MAAIW,OAAO,GAAGhB,sBAAsB,CAACI,YAAD,EAAeC,WAAf,CAApC;;AAEA,MAAIV,iBAAiB,CAACsB,yCAAtB,EAAiE;AAC/D,WAAOV,uBAAuB,GAAG,GAA1B,GAAgCH,YAAY,CAACc,IAA7C,GAAoD,GAApD,IAA2DH,iBAAiB,IAAI,IAArB,IAA6BlB,aAAa,CAACkB,iBAAD,CAA1C,GAAgE,IAAhE,GAAuEI,IAAI,CAACC,SAAL,CAAetB,UAAU,CAACiB,iBAAD,CAAzB,CAAlI,IAAmL,GAAnL,IAA0L,OAAOC,OAAP,KAAmB,WAAnB,GAAiC,SAAjC,GAA6CA,OAAO,IAAI,IAAX,GAAkB,MAAlB,GAA2BK,KAAK,CAACC,OAAN,CAAcN,OAAd,IAAyB,MAAMA,OAAO,CAACF,IAAR,CAAa,GAAb,CAAN,GAA0B,GAAnD,GAAyDE,OAA3T,CAAP;AACD,GAFD,MAEO;AACL,QAAIO,eAAJ;;AAEA,WAAOhB,uBAAuB,GAAG,GAA1B,GAAgCH,YAAY,CAACc,IAA7C,GAAoD,GAApD,GAA0DC,IAAI,CAACC,SAAL,CAAetB,UAAU,CAACiB,iBAAD,CAAzB,CAA1D,GAA0G,GAA1G,IAAiH,CAACQ,eAAe,GAAGJ,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAnB,MAAgD,IAAhD,IAAwDO,eAAe,KAAK,KAAK,CAAjF,GAAqFA,eAArF,GAAuG,SAAxN,CAAP;AACD;AACF;;AAEDC,MAAM,CAACC,OAAP,GAAiBtB,qBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @emails oncall+relay\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayFeatureFlags = require('./RelayFeatureFlags');\n\nvar isEmptyObject = require('./isEmptyObject');\n\nvar stableCopy = require('./stableCopy');\n\nvar _require = require('../store/RelayModernSelector'),\n    getDataIDsFromFragment = _require.getDataIDsFromFragment,\n    getVariablesFromFragment = _require.getVariablesFromFragment,\n    getSelector = _require.getSelector;\n\nfunction getFragmentIdentifier(fragmentNode, fragmentRef) {\n  var selector = getSelector(fragmentNode, fragmentRef);\n  var fragmentOwnerIdentifier = selector == null ? 'null' : selector.kind === 'SingularReaderSelector' ? selector.owner.identifier : '[' + selector.selectors.map(function (sel) {\n    return sel.owner.identifier;\n  }).join(',') + ']';\n  var fragmentVariables = getVariablesFromFragment(fragmentNode, fragmentRef);\n  var dataIDs = getDataIDsFromFragment(fragmentNode, fragmentRef);\n\n  if (RelayFeatureFlags.ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION) {\n    return fragmentOwnerIdentifier + '/' + fragmentNode.name + '/' + (fragmentVariables == null || isEmptyObject(fragmentVariables) ? '{}' : JSON.stringify(stableCopy(fragmentVariables))) + '/' + (typeof dataIDs === 'undefined' ? 'missing' : dataIDs == null ? 'null' : Array.isArray(dataIDs) ? '[' + dataIDs.join(',') + ']' : dataIDs);\n  } else {\n    var _JSON$stringify;\n\n    return fragmentOwnerIdentifier + '/' + fragmentNode.name + '/' + JSON.stringify(stableCopy(fragmentVariables)) + '/' + ((_JSON$stringify = JSON.stringify(dataIDs)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : 'missing');\n  }\n}\n\nmodule.exports = getFragmentIdentifier;"]},"metadata":{},"sourceType":"script"}