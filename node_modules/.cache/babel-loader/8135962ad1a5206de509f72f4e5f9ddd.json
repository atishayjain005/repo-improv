{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar _require = require('react'),\n    useRef = _require.useRef;\n\nfunction useStaticFragmentNodeWarning(fragmentNode, warningContext) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // This is calling `useRef` conditionally, but based on the environment\n    // __DEV__ setting which shouldn't change. This allows us to only pay the\n    // cost of `useRef` in development mode to produce the warning.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var initialPropRef = useRef(fragmentNode.name);\n    process.env.NODE_ENV !== \"production\" ? warning(initialPropRef.current === fragmentNode.name, 'Relay: The %s has to remain the same over the lifetime of a component. ' + 'Changing it is not supported and will result in unexpected behavior.', warningContext) : void 0;\n  }\n}\n\nmodule.exports = useStaticFragmentNodeWarning;","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/node_modules/react-relay/lib/relay-hooks/useStaticFragmentNodeWarning.js"],"names":["warning","require","_require","useRef","useStaticFragmentNodeWarning","fragmentNode","warningContext","process","env","NODE_ENV","initialPropRef","name","current","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAArB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,OAAD,CAAtB;AAAA,IACIE,MAAM,GAAGD,QAAQ,CAACC,MADtB;;AAGA,SAASC,4BAAT,CAAsCC,YAAtC,EAAoDC,cAApD,EAAoE;AAClE,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACA;AACA;AACA;AACA,QAAIC,cAAc,GAAGP,MAAM,CAACE,YAAY,CAACM,IAAd,CAA3B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCT,OAAO,CAACU,cAAc,CAACE,OAAf,KAA2BP,YAAY,CAACM,IAAzC,EAA+C,4EAA4E,sEAA3H,EAAmML,cAAnM,CAA/C,GAAoQ,KAAK,CAAzQ;AACD;AACF;;AAEDO,MAAM,CAACC,OAAP,GAAiBV,4BAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar _require = require('react'),\n    useRef = _require.useRef;\n\nfunction useStaticFragmentNodeWarning(fragmentNode, warningContext) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // This is calling `useRef` conditionally, but based on the environment\n    // __DEV__ setting which shouldn't change. This allows us to only pay the\n    // cost of `useRef` in development mode to produce the warning.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var initialPropRef = useRef(fragmentNode.name);\n    process.env.NODE_ENV !== \"production\" ? warning(initialPropRef.current === fragmentNode.name, 'Relay: The %s has to remain the same over the lifetime of a component. ' + 'Changing it is not supported and will result in unexpected behavior.', warningContext) : void 0;\n  }\n}\n\nmodule.exports = useStaticFragmentNodeWarning;"]},"metadata":{},"sourceType":"script"}