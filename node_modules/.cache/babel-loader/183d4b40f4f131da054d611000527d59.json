{"ast":null,"code":"/* eslint-disable */'use strict';/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type GitDataRepositoryNameQueryVariables = {|\n  usr: string\n|};\nexport type GitDataRepositoryNameQueryResponse = {|\n  +user: ?{|\n    +repositories: {|\n      +nodes: ?$ReadOnlyArray<?{|\n        +name: string,\n        +pushedAt: ?any,\n        +id: string,\n      |}>\n    |}\n  |}\n|};\nexport type GitDataRepositoryNameQuery = {|\n  variables: GitDataRepositoryNameQueryVariables,\n  response: GitDataRepositoryNameQueryResponse,\n|};\n*/ /*\nquery GitDataRepositoryNameQuery(\n  $usr: String!\n) {\n  user(login: $usr) {\n    repositories(first: 10, orderBy: {field: CREATED_AT, direction: DESC}) {\n      nodes {\n        name\n        pushedAt\n        id\n      }\n    }\n    id\n  }\n}\n*/var node/*: ConcreteRequest*/=function(){var v0=[{\"defaultValue\":null,\"kind\":\"LocalArgument\",\"name\":\"usr\"}],v1=[{\"kind\":\"Variable\",\"name\":\"login\",\"variableName\":\"usr\"}],v2={\"alias\":null,\"args\":null,\"kind\":\"ScalarField\",\"name\":\"id\",\"storageKey\":null},v3={\"alias\":null,\"args\":[{\"kind\":\"Literal\",\"name\":\"first\",\"value\":10},{\"kind\":\"Literal\",\"name\":\"orderBy\",\"value\":{\"direction\":\"DESC\",\"field\":\"CREATED_AT\"}}],\"concreteType\":\"RepositoryConnection\",\"kind\":\"LinkedField\",\"name\":\"repositories\",\"plural\":false,\"selections\":[{\"alias\":null,\"args\":null,\"concreteType\":\"Repository\",\"kind\":\"LinkedField\",\"name\":\"nodes\",\"plural\":true,\"selections\":[{\"alias\":null,\"args\":null,\"kind\":\"ScalarField\",\"name\":\"name\",\"storageKey\":null},{\"alias\":null,\"args\":null,\"kind\":\"ScalarField\",\"name\":\"pushedAt\",\"storageKey\":null},v2/*: any*/],\"storageKey\":null}],\"storageKey\":\"repositories(first:10,orderBy:{\\\"direction\\\":\\\"DESC\\\",\\\"field\\\":\\\"CREATED_AT\\\"})\"};return{\"fragment\":{\"argumentDefinitions\":v0/*: any*/,\"kind\":\"Fragment\",\"metadata\":null,\"name\":\"GitDataRepositoryNameQuery\",\"selections\":[{\"alias\":null,\"args\":v1/*: any*/,\"concreteType\":\"User\",\"kind\":\"LinkedField\",\"name\":\"user\",\"plural\":false,\"selections\":[v3/*: any*/],\"storageKey\":null}],\"type\":\"Query\",\"abstractKey\":null},\"kind\":\"Request\",\"operation\":{\"argumentDefinitions\":v0/*: any*/,\"kind\":\"Operation\",\"name\":\"GitDataRepositoryNameQuery\",\"selections\":[{\"alias\":null,\"args\":v1/*: any*/,\"concreteType\":\"User\",\"kind\":\"LinkedField\",\"name\":\"user\",\"plural\":false,\"selections\":[v3/*: any*/,v2/*: any*/],\"storageKey\":null}]},\"params\":{\"cacheID\":\"44b9c37f8481bef67b8572d1779d7514\",\"id\":null,\"metadata\":{},\"name\":\"GitDataRepositoryNameQuery\",\"operationKind\":\"query\",\"text\":\"query GitDataRepositoryNameQuery(\\n  $usr: String!\\n) {\\n  user(login: $usr) {\\n    repositories(first: 10, orderBy: {field: CREATED_AT, direction: DESC}) {\\n      nodes {\\n        name\\n        pushedAt\\n        id\\n      }\\n    }\\n    id\\n  }\\n}\\n\"}};}();// prettier-ignore\nnode/*: any*/.hash='4dc91e5be7a2d31daf0ce629a7e413fe';module.exports=node;","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/src/route/__generated__/GitDataRepositoryNameQuery.graphql.js"],"names":["node","v0","v1","v2","v3","hash","module","exports"],"mappings":"AAIA,oBAEA,aAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA,GAAMA,CAAAA,IAAI,sBAAyB,UAAU,CAC7C,GAAIC,CAAAA,EAAE,CAAG,CACP,CACE,eAAgB,IADlB,CAEE,OAAQ,eAFV,CAGE,OAAQ,KAHV,CADO,CAAT,CAOAC,EAAE,CAAG,CACH,CACE,OAAQ,UADV,CAEE,OAAQ,OAFV,CAGE,eAAgB,KAHlB,CADG,CAPL,CAcAC,EAAE,CAAG,CACH,QAAS,IADN,CAEH,OAAQ,IAFL,CAGH,OAAQ,aAHL,CAIH,OAAQ,IAJL,CAKH,aAAc,IALX,CAdL,CAqBAC,EAAE,CAAG,CACH,QAAS,IADN,CAEH,OAAQ,CACN,CACE,OAAQ,SADV,CAEE,OAAQ,OAFV,CAGE,QAAS,EAHX,CADM,CAMN,CACE,OAAQ,SADV,CAEE,OAAQ,SAFV,CAGE,QAAS,CACP,YAAa,MADN,CAEP,QAAS,YAFF,CAHX,CANM,CAFL,CAiBH,eAAgB,sBAjBb,CAkBH,OAAQ,aAlBL,CAmBH,OAAQ,cAnBL,CAoBH,SAAU,KApBP,CAqBH,aAAc,CACZ,CACE,QAAS,IADX,CAEE,OAAQ,IAFV,CAGE,eAAgB,YAHlB,CAIE,OAAQ,aAJV,CAKE,OAAQ,OALV,CAME,SAAU,IANZ,CAOE,aAAc,CACZ,CACE,QAAS,IADX,CAEE,OAAQ,IAFV,CAGE,OAAQ,aAHV,CAIE,OAAQ,MAJV,CAKE,aAAc,IALhB,CADY,CAQZ,CACE,QAAS,IADX,CAEE,OAAQ,IAFV,CAGE,OAAQ,aAHV,CAIE,OAAQ,UAJV,CAKE,aAAc,IALhB,CARY,CAeXD,EAAE,SAfS,CAPhB,CAwBE,aAAc,IAxBhB,CADY,CArBX,CAiDH,aAAc,kFAjDX,CArBL,CAwEA,MAAO,CACL,WAAY,CACV,sBAAwBF,EAAE,SADhB,CAEV,OAAQ,UAFE,CAGV,WAAY,IAHF,CAIV,OAAQ,4BAJE,CAKV,aAAc,CACZ,CACE,QAAS,IADX,CAEE,OAASC,EAAE,SAFb,CAGE,eAAgB,MAHlB,CAIE,OAAQ,aAJV,CAKE,OAAQ,MALV,CAME,SAAU,KANZ,CAOE,aAAc,CACXE,EAAE,SADS,CAPhB,CAUE,aAAc,IAVhB,CADY,CALJ,CAmBV,OAAQ,OAnBE,CAoBV,cAAe,IApBL,CADP,CAuBL,OAAQ,SAvBH,CAwBL,YAAa,CACX,sBAAwBH,EAAE,SADf,CAEX,OAAQ,WAFG,CAGX,OAAQ,4BAHG,CAIX,aAAc,CACZ,CACE,QAAS,IADX,CAEE,OAASC,EAAE,SAFb,CAGE,eAAgB,MAHlB,CAIE,OAAQ,aAJV,CAKE,OAAQ,MALV,CAME,SAAU,KANZ,CAOE,aAAc,CACXE,EAAE,SADS,CAEXD,EAAE,SAFS,CAPhB,CAWE,aAAc,IAXhB,CADY,CAJH,CAxBR,CA4CL,SAAU,CACR,UAAW,kCADH,CAER,KAAM,IAFE,CAGR,WAAY,EAHJ,CAIR,OAAQ,4BAJA,CAKR,gBAAiB,OALT,CAMR,OAAQ,2PANA,CA5CL,CAAP,CAqDC,CA9HiC,EAAlC,CA+HA;AACCH,IAAI,SAAL,CAAgBK,IAAhB,CAAuB,kCAAvB,CAEAC,MAAM,CAACC,OAAP,CAAiBP,IAAjB","sourcesContent":["/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type GitDataRepositoryNameQueryVariables = {|\n  usr: string\n|};\nexport type GitDataRepositoryNameQueryResponse = {|\n  +user: ?{|\n    +repositories: {|\n      +nodes: ?$ReadOnlyArray<?{|\n        +name: string,\n        +pushedAt: ?any,\n        +id: string,\n      |}>\n    |}\n  |}\n|};\nexport type GitDataRepositoryNameQuery = {|\n  variables: GitDataRepositoryNameQueryVariables,\n  response: GitDataRepositoryNameQueryResponse,\n|};\n*/\n\n\n/*\nquery GitDataRepositoryNameQuery(\n  $usr: String!\n) {\n  user(login: $usr) {\n    repositories(first: 10, orderBy: {field: CREATED_AT, direction: DESC}) {\n      nodes {\n        name\n        pushedAt\n        id\n      }\n    }\n    id\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"usr\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"login\",\n    \"variableName\": \"usr\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"first\",\n      \"value\": 10\n    },\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"orderBy\",\n      \"value\": {\n        \"direction\": \"DESC\",\n        \"field\": \"CREATED_AT\"\n      }\n    }\n  ],\n  \"concreteType\": \"RepositoryConnection\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"repositories\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"Repository\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"nodes\",\n      \"plural\": true,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"name\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"pushedAt\",\n          \"storageKey\": null\n        },\n        (v2/*: any*/)\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": \"repositories(first:10,orderBy:{\\\"direction\\\":\\\"DESC\\\",\\\"field\\\":\\\"CREATED_AT\\\"})\"\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"GitDataRepositoryNameQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v3/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"GitDataRepositoryNameQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v3/*: any*/),\n          (v2/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"44b9c37f8481bef67b8572d1779d7514\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"GitDataRepositoryNameQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query GitDataRepositoryNameQuery(\\n  $usr: String!\\n) {\\n  user(login: $usr) {\\n    repositories(first: 10, orderBy: {field: CREATED_AT, direction: DESC}) {\\n      nodes {\\n        name\\n        pushedAt\\n        id\\n      }\\n    }\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '4dc91e5be7a2d31daf0ce629a7e413fe';\n\nmodule.exports = node;\n"]},"metadata":{},"sourceType":"module"}