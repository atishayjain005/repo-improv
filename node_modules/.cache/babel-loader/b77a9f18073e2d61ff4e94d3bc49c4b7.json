{"ast":null,"code":"var _GitDataRepositoryNameQuery,\n    _jsxFileName = \"/home/akshay/Atishay/appointy-screening/src/route/GitData.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { RelayEnvironmentProvider, loadQuery, usePreloadedQuery } from \"react-relay/hooks\";\n/* \nimport RelayEnvironment from \"../RelayEnvironment\"; */\n\nimport { Button, Container, Box, Typography, Card, CardContent, CardActions } from \"@mui/material\";\nimport { Environment, Network, RecordSource, Store } from 'relay-runtime';\nimport FetchGraphQL from '../FetchGraphQL';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Suspense\n} = React;\nconst RepositoryNameQuery = _GitDataRepositoryNameQuery !== void 0 ? _GitDataRepositoryNameQuery : (_GitDataRepositoryNameQuery = require(\"./__generated__/GitDataRepositoryNameQuery.graphql\"), _GitDataRepositoryNameQuery.hash && _GitDataRepositoryNameQuery.hash !== \"b34b784136892e534550ff497245bd0e\" && console.error(\"The definition of 'GitDataRepositoryNameQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _GitDataRepositoryNameQuery);\n\nasync function fetchRelay(params, variables) {\n  console.log(`fetching query ${params.name} with ${JSON.stringify(variables)}`);\n  return await FetchGraphQL(params.text, variables);\n} // Export a singleton instance of Relay Environment configured with our network function:\n\n\nconst env = new Environment({\n  network: Network.create(fetchRelay),\n  store: new Store(new RecordSource())\n});\nconst preloadedQuery = loadQuery(env, RepositoryNameQuery, {\n  usr: localStorage.getItem(\"user\")\n});\n\nfunction GitData(props) {\n  _s();\n\n  const data = usePreloadedQuery(RepositoryNameQuery, props.preloadedQuery);\n\n  const bull = /*#__PURE__*/_jsxDEV(Box, {\n    component: \"span\",\n    sx: {\n      display: 'inline-block',\n      mx: '2px',\n      transform: 'scale(0.8)'\n    },\n    children: \"\\u2022\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: data ? /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"lightgrey\",\n        my: 10,\n        sx: {\n          fontSize: 72,\n          fontWeight: 900\n        },\n        children: \"Repo-improv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\"\n        },\n        children: data.user.repositories.nodes.map(data => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              minWidth: 275\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  fontSize: 14\n                },\n                color: \"text.secondary\",\n                gutterBottom: true,\n                children: \"Word of the Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"div\",\n                children: data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  mb: 1.5\n                },\n                color: \"text.secondary\",\n                children: data.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [\"well meaning and kindly.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 11\n                }, this), '\"a benevolent smile\"']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              sx: {\n                display: \"flex\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: data.url,\n                children: data.url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"no data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GitData, \"gOoAgDlVPdxEXFj+8uugLFK2myc=\", false, function () {\n  return [usePreloadedQuery];\n});\n\n_c = GitData;\n\nfunction GitDataRoot(props) {\n  return /*#__PURE__*/_jsxDEV(RelayEnvironmentProvider, {\n    environment: env,\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: \"Loading...\",\n      children: /*#__PURE__*/_jsxDEV(GitData, {\n        preloadedQuery: preloadedQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = GitDataRoot;\nexport default GitDataRoot;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GitData\");\n$RefreshReg$(_c2, \"GitDataRoot\");","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/src/route/GitData.jsx"],"names":["React","RelayEnvironmentProvider","loadQuery","usePreloadedQuery","Button","Container","Box","Typography","Card","CardContent","CardActions","Environment","Network","RecordSource","Store","FetchGraphQL","Link","Suspense","RepositoryNameQuery","fetchRelay","params","variables","console","log","name","JSON","stringify","text","env","network","create","store","preloadedQuery","usr","localStorage","getItem","GitData","props","data","bull","display","mx","transform","fontSize","fontWeight","flexDirection","flexWrap","user","repositories","nodes","map","minWidth","mb","description","url","GitDataRoot"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport {\n  RelayEnvironmentProvider,\n  loadQuery,\n  usePreloadedQuery,\n} from \"react-relay/hooks\";/* \nimport RelayEnvironment from \"../RelayEnvironment\"; */\nimport { Button, Container, Box, Typography , Card, CardContent,CardActions} from \"@mui/material\";\nimport {Environment, Network, RecordSource, Store} from 'relay-runtime';\nimport FetchGraphQL from '../FetchGraphQL';\nimport {Link} from \"react-router-dom\"\n\nconst { Suspense } = React;\n\n\n\nconst RepositoryNameQuery = graphql`\n  query GitDataRepositoryNameQuery($usr : String!) {\n    user(login: $usr) {\n      repositories(first: 10, orderBy: { field: CREATED_AT, direction: DESC }) {\n        nodes {\n          name\n          description\n          collaborators(first:10) {\n            nodes{\n              name\n            }\n          }\n          issues(first:10,orderBy:{field: CREATED_AT,direction:DESC}){\n            nodes{\n              __typename\n            }\n          }\n          createdAt\n          url\n        }\n      }\n    }\n  }\n`;\n\nasync function fetchRelay(params, variables) {\n  console.log(`fetching query ${params.name} with ${JSON.stringify(variables)}`);\n  return await FetchGraphQL(params.text, variables);\n}\n\n// Export a singleton instance of Relay Environment configured with our network function:\nconst env = new Environment({\n  network: Network.create(fetchRelay),\n  store: new Store(new RecordSource()),\n});\n\nconst preloadedQuery = loadQuery(env, RepositoryNameQuery, {\nusr : localStorage.getItem(\"user\")\n});\n\nfunction GitData(props) {\n  const data = usePreloadedQuery(RepositoryNameQuery, props.preloadedQuery);\n\n  const bull = (\n    <Box\n      component=\"span\"\n      sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n    >\n      •\n    </Box>\n  );\n  return (\n    <Container>\n      {\n        data?(\n          <Box>\n        <Typography\n          color=\"lightgrey\"\n          my={10}\n          sx={{ fontSize: 72, fontWeight: 900 }}\n        >\n          Repo-improv\n        </Typography>\n        <Box sx={{ display:\"flex\", flexDirection:\"row\", flexWrap:\"wrap\"}}>\n          {data.user.repositories.nodes.map((data) => {\n            return (\n              <Card sx={{ minWidth: 275 }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Word of the Day\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {data.name}\n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n          {data.description}\n        </Typography>\n        <Typography variant=\"body2\">\n          well meaning and kindly.\n          <br />\n          {'\"a benevolent smile\"'}\n        </Typography>\n      </CardContent>\n      <CardActions sx={{display:\"flex\",}}>\n        <Link to = {data.url}>{data.url}</Link>\n      </CardActions>\n    </Card>\n            );\n          })}\n        </Box>\n      </Box>\n      )\n      :\n      (<h1>no data found</h1>)\n      }\n    </Container>\n  );\n}\n\nfunction GitDataRoot(props) {\n  return (\n    <RelayEnvironmentProvider environment={env}>\n      <Suspense fallback={\"Loading...\"}>\n        <GitData preloadedQuery={preloadedQuery} />\n      </Suspense>\n    </RelayEnvironmentProvider>\n  );\n}\n\nexport default GitDataRoot;\n"]},"metadata":{},"sourceType":"module"}