{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport TokenContext from \"./context/Token/TokenContext\";\n\nasync function FetchGraphQL(text, variables) {\n  _s();\n\n  const t = useContext(TokenContext);\n  const TOKEN = token.tokenValue; // Fetch data from GitHub's GraphQL API:\n\n  const response = await fetch('https://api.github.com/graphql', {\n    method: 'POST',\n    headers: {\n      Authorization: `bearer ${TOKEN}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: text,\n      variables\n    })\n  }); // Get the response as JSON\n\n  return await response.json();\n}\n\n_s(FetchGraphQL, \"HJ1wmQfhQB2DF5cup/6Wxn+TXqs=\");\n\n_c = FetchGraphQL;\nexport default FetchGraphQL;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchGraphQL\");","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/src/FetchGraphQL.jsx"],"names":["React","useContext","TokenContext","FetchGraphQL","text","variables","t","TOKEN","token","tokenValue","response","fetch","method","headers","Authorization","body","JSON","stringify","query","json"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,eAAeC,YAAf,CAA4BC,IAA5B,EAAkCC,SAAlC,EAA6C;AAAA;;AAC3C,QAAMC,CAAC,GAAGL,UAAU,CAACC,YAAD,CAApB;AACA,QAAMK,KAAK,GAAGC,KAAK,CAACC,UAApB,CAF2C,CAI3C;;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,IAAAA,MAAM,EAAE,MADqD;AAE7DC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASP,KAAM,EADxB;AAEP,sBAAgB;AAFT,KAFoD;AAM7DQ,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,KAAK,EAAEd,IADY;AAEnBC,MAAAA;AAFmB,KAAf;AANuD,GAAnC,CAA5B,CAL2C,CAiB3C;;AACA,SAAO,MAAMK,QAAQ,CAACS,IAAT,EAAb;AACD;;GAnBchB,Y;;KAAAA,Y;AAqBf,eAAeA,YAAf","sourcesContent":["import React,{ useContext } from 'react';\nimport TokenContext from \"./context/Token/TokenContext\";\n\nasync function FetchGraphQL(text, variables) {\n  const t = useContext(TokenContext);\n  const TOKEN = token.tokenValue;\n\n  // Fetch data from GitHub's GraphQL API:\n  const response = await fetch('https://api.github.com/graphql', {\n    method: 'POST',\n    headers: {\n      Authorization: `bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: text,\n      variables,\n    }),\n  });\n\n  // Get the response as JSON\n  return await response.json();\n}\n\nexport default FetchGraphQL;"]},"metadata":{},"sourceType":"module"}