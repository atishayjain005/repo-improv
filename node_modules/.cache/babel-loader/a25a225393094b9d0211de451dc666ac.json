{"ast":null,"code":"/* eslint-disable */\n'use strict';\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type GitDataRepositoryNameQueryVariables = {|\n  usr: string\n|};\nexport type GitDataRepositoryNameQueryResponse = {|\n  +user: ?{|\n    +repositories: {|\n      +nodes: ?$ReadOnlyArray<?{|\n        +name: string,\n        +pushedAt: ?any,\n        +id: string,\n      |}>\n    |}\n  |}\n|};\nexport type GitDataRepositoryNameQuery = {|\n  variables: GitDataRepositoryNameQueryVariables,\n  response: GitDataRepositoryNameQueryResponse,\n|};\n*/\n\n/*\nquery GitDataRepositoryNameQuery(\n  $usr: String!\n) {\n  user(login: $usr) {\n    repositories(first: 10, orderBy: {field: CREATED_AT, direction: DESC}) {\n      nodes {\n        name\n        pushedAt\n        id\n      }\n    }\n    id\n  }\n}\n*/\n\nconst node\n/*: ConcreteRequest*/\n= function () {\n  var v0 = [{\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"usr\"\n  }],\n      v1 = [{\n    \"kind\": \"Variable\",\n    \"name\": \"login\",\n    \"variableName\": \"usr\"\n  }],\n      v2 = {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"id\",\n    \"storageKey\": null\n  },\n      v3 = {\n    \"alias\": null,\n    \"args\": [{\n      \"kind\": \"Literal\",\n      \"name\": \"first\",\n      \"value\": 10\n    }, {\n      \"kind\": \"Literal\",\n      \"name\": \"orderBy\",\n      \"value\": {\n        \"direction\": \"DESC\",\n        \"field\": \"CREATED_AT\"\n      }\n    }],\n    \"concreteType\": \"RepositoryConnection\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"repositories\",\n    \"plural\": false,\n    \"selections\": [{\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"Repository\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"nodes\",\n      \"plural\": true,\n      \"selections\": [{\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      }, {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"pushedAt\",\n        \"storageKey\": null\n      }, v2\n      /*: any*/\n      ],\n      \"storageKey\": null\n    }],\n    \"storageKey\": \"repositories(first:10,orderBy:{\\\"direction\\\":\\\"DESC\\\",\\\"field\\\":\\\"CREATED_AT\\\"})\"\n  };\n  return {\n    \"fragment\": {\n      \"argumentDefinitions\": v0\n      /*: any*/\n      ,\n      \"kind\": \"Fragment\",\n      \"metadata\": null,\n      \"name\": \"GitDataRepositoryNameQuery\",\n      \"selections\": [{\n        \"alias\": null,\n        \"args\": v1\n        /*: any*/\n        ,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [v3\n        /*: any*/\n        ],\n        \"storageKey\": null\n      }],\n      \"type\": \"Query\",\n      \"abstractKey\": null\n    },\n    \"kind\": \"Request\",\n    \"operation\": {\n      \"argumentDefinitions\": v0\n      /*: any*/\n      ,\n      \"kind\": \"Operation\",\n      \"name\": \"GitDataRepositoryNameQuery\",\n      \"selections\": [{\n        \"alias\": null,\n        \"args\": v1\n        /*: any*/\n        ,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [v3\n        /*: any*/\n        , v2\n        /*: any*/\n        ],\n        \"storageKey\": null\n      }]\n    },\n    \"params\": {\n      \"cacheID\": \"44b9c37f8481bef67b8572d1779d7514\",\n      \"id\": null,\n      \"metadata\": {},\n      \"name\": \"GitDataRepositoryNameQuery\",\n      \"operationKind\": \"query\",\n      \"text\": \"query GitDataRepositoryNameQuery(\\n  $usr: String!\\n) {\\n  user(login: $usr) {\\n    repositories(first: 10, orderBy: {field: CREATED_AT, direction: DESC}) {\\n      nodes {\\n        name\\n        pushedAt\\n        id\\n      }\\n    }\\n    id\\n  }\\n}\\n\"\n    }\n  };\n}(); // prettier-ignore\n\n\nnode\n/*: any*/\n.hash = '4dc91e5be7a2d31daf0ce629a7e413fe';\nmodule.exports = node;","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/src/route/__generated__/GitDataRepositoryNameQuery.graphql.js"],"names":["node","v0","v1","v2","v3","hash","module","exports"],"mappings":"AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA;AAAI;AAAA,EAAyB,YAAU;AAC7C,MAAIC,EAAE,GAAG,CACP;AACE,oBAAgB,IADlB;AAEE,YAAQ,eAFV;AAGE,YAAQ;AAHV,GADO,CAAT;AAAA,MAOAC,EAAE,GAAG,CACH;AACE,YAAQ,UADV;AAEE,YAAQ,OAFV;AAGE,oBAAgB;AAHlB,GADG,CAPL;AAAA,MAcAC,EAAE,GAAG;AACH,aAAS,IADN;AAEH,YAAQ,IAFL;AAGH,YAAQ,aAHL;AAIH,YAAQ,IAJL;AAKH,kBAAc;AALX,GAdL;AAAA,MAqBAC,EAAE,GAAG;AACH,aAAS,IADN;AAEH,YAAQ,CACN;AACE,cAAQ,SADV;AAEE,cAAQ,OAFV;AAGE,eAAS;AAHX,KADM,EAMN;AACE,cAAQ,SADV;AAEE,cAAQ,SAFV;AAGE,eAAS;AACP,qBAAa,MADN;AAEP,iBAAS;AAFF;AAHX,KANM,CAFL;AAiBH,oBAAgB,sBAjBb;AAkBH,YAAQ,aAlBL;AAmBH,YAAQ,cAnBL;AAoBH,cAAU,KApBP;AAqBH,kBAAc,CACZ;AACE,eAAS,IADX;AAEE,cAAQ,IAFV;AAGE,sBAAgB,YAHlB;AAIE,cAAQ,aAJV;AAKE,cAAQ,OALV;AAME,gBAAU,IANZ;AAOE,oBAAc,CACZ;AACE,iBAAS,IADX;AAEE,gBAAQ,IAFV;AAGE,gBAAQ,aAHV;AAIE,gBAAQ,MAJV;AAKE,sBAAc;AALhB,OADY,EAQZ;AACE,iBAAS,IADX;AAEE,gBAAQ,IAFV;AAGE,gBAAQ,aAHV;AAIE,gBAAQ,UAJV;AAKE,sBAAc;AALhB,OARY,EAeXD;AAAE;AAfS,OAPhB;AAwBE,oBAAc;AAxBhB,KADY,CArBX;AAiDH,kBAAc;AAjDX,GArBL;AAwEA,SAAO;AACL,gBAAY;AACV,6BAAwBF;AAAE;AADhB;AAEV,cAAQ,UAFE;AAGV,kBAAY,IAHF;AAIV,cAAQ,4BAJE;AAKV,oBAAc,CACZ;AACE,iBAAS,IADX;AAEE,gBAASC;AAAE;AAFb;AAGE,wBAAgB,MAHlB;AAIE,gBAAQ,aAJV;AAKE,gBAAQ,MALV;AAME,kBAAU,KANZ;AAOE,sBAAc,CACXE;AAAE;AADS,SAPhB;AAUE,sBAAc;AAVhB,OADY,CALJ;AAmBV,cAAQ,OAnBE;AAoBV,qBAAe;AApBL,KADP;AAuBL,YAAQ,SAvBH;AAwBL,iBAAa;AACX,6BAAwBH;AAAE;AADf;AAEX,cAAQ,WAFG;AAGX,cAAQ,4BAHG;AAIX,oBAAc,CACZ;AACE,iBAAS,IADX;AAEE,gBAASC;AAAE;AAFb;AAGE,wBAAgB,MAHlB;AAIE,gBAAQ,aAJV;AAKE,gBAAQ,MALV;AAME,kBAAU,KANZ;AAOE,sBAAc,CACXE;AAAE;AADS,UAEXD;AAAE;AAFS,SAPhB;AAWE,sBAAc;AAXhB,OADY;AAJH,KAxBR;AA4CL,cAAU;AACR,iBAAW,kCADH;AAER,YAAM,IAFE;AAGR,kBAAY,EAHJ;AAIR,cAAQ,4BAJA;AAKR,uBAAiB,OALT;AAMR,cAAQ;AANA;AA5CL,GAAP;AAqDC,CA9HiC,EAAlC,C,CA+HA;;;AACCH;AAAI;AAAL,CAAgBK,IAAhB,GAAuB,kCAAvB;AAEAC,MAAM,CAACC,OAAP,GAAiBP,IAAjB","sourcesContent":["/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type GitDataRepositoryNameQueryVariables = {|\n  usr: string\n|};\nexport type GitDataRepositoryNameQueryResponse = {|\n  +user: ?{|\n    +repositories: {|\n      +nodes: ?$ReadOnlyArray<?{|\n        +name: string,\n        +pushedAt: ?any,\n        +id: string,\n      |}>\n    |}\n  |}\n|};\nexport type GitDataRepositoryNameQuery = {|\n  variables: GitDataRepositoryNameQueryVariables,\n  response: GitDataRepositoryNameQueryResponse,\n|};\n*/\n\n\n/*\nquery GitDataRepositoryNameQuery(\n  $usr: String!\n) {\n  user(login: $usr) {\n    repositories(first: 10, orderBy: {field: CREATED_AT, direction: DESC}) {\n      nodes {\n        name\n        pushedAt\n        id\n      }\n    }\n    id\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"usr\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"login\",\n    \"variableName\": \"usr\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"first\",\n      \"value\": 10\n    },\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"orderBy\",\n      \"value\": {\n        \"direction\": \"DESC\",\n        \"field\": \"CREATED_AT\"\n      }\n    }\n  ],\n  \"concreteType\": \"RepositoryConnection\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"repositories\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"Repository\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"nodes\",\n      \"plural\": true,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"name\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"pushedAt\",\n          \"storageKey\": null\n        },\n        (v2/*: any*/)\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": \"repositories(first:10,orderBy:{\\\"direction\\\":\\\"DESC\\\",\\\"field\\\":\\\"CREATED_AT\\\"})\"\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"GitDataRepositoryNameQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v3/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"GitDataRepositoryNameQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v3/*: any*/),\n          (v2/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"44b9c37f8481bef67b8572d1779d7514\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"GitDataRepositoryNameQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query GitDataRepositoryNameQuery(\\n  $usr: String!\\n) {\\n  user(login: $usr) {\\n    repositories(first: 10, orderBy: {field: CREATED_AT, direction: DESC}) {\\n      nodes {\\n        name\\n        pushedAt\\n        id\\n      }\\n    }\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '4dc91e5be7a2d31daf0ce629a7e413fe';\n\nmodule.exports = node;\n"]},"metadata":{},"sourceType":"module"}