{"ast":null,"code":"var _ProfileFeedbackLikeMutation,\n    _jsxFileName = \"/home/akshay/Atishay/appointy-screening/src/route/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useMutation } from \"react-relay\";\nimport GitDataRoot from './GitData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function fetchGraphQL(text, variables) {\n  const REACT_APP_GITHUB_AUTH_TOKEN = process.env.REACT_APP_GITHUB_AUTH_TOKEN; // Fetch data from GitHub's GraphQL API:\n\n  const response = await fetch('https://api.github.com/graphql', {\n    method: 'POST',\n    headers: {\n      Authorization: `bearer ${REACT_APP_GITHUB_AUTH_TOKEN}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: text,\n      variables\n    })\n  }); // Get the response as JSON\n\n  return await response.json();\n}\n\nexport default function Profile() {\n  _s();\n\n  const [commit, isInFlight] = useMutation(_ProfileFeedbackLikeMutation !== void 0 ? _ProfileFeedbackLikeMutation : (_ProfileFeedbackLikeMutation = require(\"./__generated__/ProfileFeedbackLikeMutation.graphql\"), _ProfileFeedbackLikeMutation.hash && _ProfileFeedbackLikeMutation.hash !== \"464044ea29d750ea5d5c7d7ff93e3914\" && console.error(\"The definition of 'ProfileFeedbackLikeMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _ProfileFeedbackLikeMutation));\n\n  if (isInFlight) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"spinning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => {\n      commit({\n        variables: {\n          input: {\n            id: '123',\n            text: 'text'\n          }\n        },\n\n        onCompleted(data) {\n          console.log(data);\n        }\n\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Profile, \"P8xNxLodjRu8BgfaCdPvjl7AviI=\", false, function () {\n  return [useMutation];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/src/route/Profile.jsx"],"names":["React","useMutation","GitDataRoot","fetchGraphQL","text","variables","REACT_APP_GITHUB_AUTH_TOKEN","process","env","response","fetch","method","headers","Authorization","body","JSON","stringify","query","json","Profile","commit","isInFlight","input","id","onCompleted","data","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,WAAP,MAAwB,WAAxB;;;AAEA,eAAeC,YAAf,CAA4BC,IAA5B,EAAkCC,SAAlC,EAA6C;AACzC,QAAMC,2BAA2B,GAAGC,OAAO,CAACC,GAAR,CAAYF,2BAAhD,CADyC,CAGzC;;AACA,QAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,IAAAA,MAAM,EAAE,MADqD;AAE7DC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASP,2BAA4B,EAD9C;AAEP,sBAAgB;AAFT,KAFoD;AAM7DQ,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,KAAK,EAAEb,IADY;AAEnBC,MAAAA;AAFmB,KAAf;AANuD,GAAnC,CAA5B,CAJyC,CAgBzC;;AACA,SAAO,MAAMI,QAAQ,CAACS,IAAT,EAAb;AACD;;AAEH,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAE9B,QAAM,CAACC,MAAD,EAASC,UAAT,IAAuBpB,WAAW,qeAAxC;;AAeF,MAAIoB,UAAJ,EAAgB;AACd,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEC,sBACM;AACJ,IAAA,OAAO,EAAE,MAAM;AACbD,MAAAA,MAAM,CAAC;AACLf,QAAAA,SAAS,EAAE;AACTiB,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE,KADC;AAELnB,YAAAA,IAAI,EAAE;AAFD;AADE,SADN;;AAOLoB,QAAAA,WAAW,CAACC,IAAD,EAAO;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;;AATI,OAAD,CAAN;AAWD;AAbG;AAAA;AAAA;AAAA;AAAA,UADN;AAiBH;;GAtCuBN,O;UAESlB,W;;;KAFTkB,O","sourcesContent":["import React from 'react'\nimport graphql from \"babel-plugin-relay/macro\";\nimport {useMutation} from \"react-relay\"\nimport GitDataRoot from './GitData';\n\nasync function fetchGraphQL(text, variables) {\n    const REACT_APP_GITHUB_AUTH_TOKEN = process.env.REACT_APP_GITHUB_AUTH_TOKEN;\n  \n    // Fetch data from GitHub's GraphQL API:\n    const response = await fetch('https://api.github.com/graphql', {\n      method: 'POST',\n      headers: {\n        Authorization: `bearer ${REACT_APP_GITHUB_AUTH_TOKEN}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: text,\n        variables,\n      }),\n    });\n  \n    // Get the response as JSON\n    return await response.json();\n  }\n\nexport default function Profile() {\n\n    const [commit, isInFlight] = useMutation(graphql`\n    mutation ProfileFeedbackLikeMutation($input: String!) {\n        updateRepository(\n            input: { repositoryId: \"R_kgDOGTgzxA\", name: $input }\n          ) {\n            repository {\n              createdAt\n              nameWithOwner\n              name\n              id\n            }\n          }\n        }\n  `);\n\n  if (isInFlight) {\n    return <div>spinning</div>\n  }\n\n    return (\n          <button\n      onClick={() => {\n        commit({\n          variables: {\n            input: {\n              id: '123',\n              text: 'text',\n            },\n          },\n          onCompleted(data) {\n            console.log(data);\n          },\n        });\n      }}\n    />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}