{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport TokenContext from \"./context/Token/TokenContext\";\n\nconst FetchGraphQL = async (text, variables) => {\n  _s();\n\n  const TOKEN = \"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\";\n  const [data, setData] = useState(\"\");\n  const some = useContext(TokenContext); // Fetch data from GitHub's GraphQL API:\n\n  const response = await fetch('https://api.github.com/graphql', {\n    method: 'POST',\n    headers: {\n      Authorization: `bearer ${TOKEN}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: text,\n      variables\n    })\n  }); // Get the response as JSON\n\n  return await response.json();\n};\n\n_s(FetchGraphQL, \"Maf8o3md40yS8Ut1oNtOW/YUY5g=\");\n\n_c = FetchGraphQL;\nexport default FetchGraphQL;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchGraphQL\");","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/src/FetchGraphQL.jsx"],"names":["useContext","useState","TokenContext","FetchGraphQL","text","variables","TOKEN","data","setData","some","response","fetch","method","headers","Authorization","body","JSON","stringify","query","json"],"mappings":";;AAAA,SAASA,UAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAGA,MAAMC,YAAY,GAAG,OAAMC,IAAN,EAAYC,SAAZ,KAA0B;AAAA;;AAC7C,QAAMC,KAAK,GAAG,0CAAd;AAEA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;AAEA,QAAMQ,IAAI,GAAGT,UAAU,CAACE,YAAD,CAAvB,CAL6C,CAO7C;;AACA,QAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,IAAAA,MAAM,EAAE,MADqD;AAE7DC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASR,KAAM,EADxB;AAEP,sBAAgB;AAFT,KAFoD;AAM7DS,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,KAAK,EAAEd,IADY;AAEnBC,MAAAA;AAFmB,KAAf;AANuD,GAAnC,CAA5B,CAR6C,CAoB7C;;AACA,SAAO,MAAMK,QAAQ,CAACS,IAAT,EAAb;AACD,CAtBD;;GAAMhB,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import { useContext , useState } from 'react';\nimport TokenContext from \"./context/Token/TokenContext\";\n\n\nconst FetchGraphQL = async(text, variables) => {\n  const TOKEN = \"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\";\n\n  const [data,setData] = useState(\"\")\n\n  const some = useContext(TokenContext);\n\n  // Fetch data from GitHub's GraphQL API:\n  const response = await fetch('https://api.github.com/graphql', {\n    method: 'POST',\n    headers: {\n      Authorization: `bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: text,\n      variables,\n    }),\n  });\n\n  // Get the response as JSON\n  return await response.json();\n}\n\nexport default FetchGraphQL;"]},"metadata":{},"sourceType":"module"}