{"ast":null,"code":"import { getAuth, signInWithPopup, GithubAuthProvider } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\"; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC1Ybbqn2ZgdXsJcnSDKWer0Zx3-Qv0ROM\",\n  authDomain: \"repo-improv.firebaseapp.com\",\n  projectId: \"repo-improv\",\n  storageBucket: \"repo-improv.appspot.com\",\n  messagingSenderId: \"326241984035\",\n  appId: \"1:326241984035:web:ade250b2bc59dc8763db96\",\n  measurementId: \"G-B09R5NFKVV\"\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\nconst signInAuth = provider => {\n  const auth = getAuth();\n  signInWithPopup(auth, provider).then(result => {\n    // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n    const credential = GithubAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken;\n    console.log(token);\n    /* \n                localStorage.setItem(\"token\", token); */\n    // The signed-in user info.\n\n    const user = result.user;\n    console.log(user);\n    /* \n        localStorage.setItem(\"user\" , user.displayName); */\n    // ...\n  }).catch(error => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message; // The email of the user's account used.\n\n    const email = error.email; // The AuthCredential type that was used.\n\n    const credential = GithubAuthProvider.credentialFromError(error); // ...\n  });\n};\n\nexport default signInAuth;","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/src/service/auth.js"],"names":["getAuth","signInWithPopup","GithubAuthProvider","initializeApp","getAnalytics","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","signInAuth","provider","auth","then","result","credential","credentialFromResult","token","accessToken","console","log","user","catch","error","errorCode","code","errorMessage","message","email","credentialFromError"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,QAA6D,eAA7D;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,QAA6B,oBAA7B,C,CACA;AACA;AAEA;AACA;;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,6BAFO;AAGnBC,EAAAA,SAAS,EAAE,aAHQ;AAInBC,EAAAA,aAAa,EAAE,yBAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB,C,CAUE;;AACA,MAAMC,GAAG,GAAGV,aAAa,CAACE,cAAD,CAAzB;AACA,MAAMS,SAAS,GAAGV,YAAY,CAACS,GAAD,CAA9B;;AAGF,MAAME,UAAU,GAAIC,QAAD,IAAc;AAC7B,QAAMC,IAAI,GAAGjB,OAAO,EAApB;AACAC,EAAAA,eAAe,CAACgB,IAAD,EAAOD,QAAP,CAAf,CACKE,IADL,CACWC,MAAD,IAAY;AACd;AACA,UAAMC,UAAU,GAAGlB,kBAAkB,CAACmB,oBAAnB,CAAwCF,MAAxC,CAAnB;AACH,UAAMG,KAAK,GAAGF,UAAU,CAACG,WAAzB;AACGC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACZ;AACA;AAEY;;AACA,UAAMI,IAAI,GAAGP,MAAM,CAACO,IAApB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA;AACZ;AACY;AACH,GAfL,EAeOC,KAfP,CAecC,KAAD,IAAW;AAChB;AACA,UAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,UAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAHgB,CAIhB;;AACA,UAAMC,KAAK,GAAGL,KAAK,CAACK,KAApB,CALgB,CAMhB;;AACA,UAAMb,UAAU,GAAGlB,kBAAkB,CAACgC,mBAAnB,CAAuCN,KAAvC,CAAnB,CAPgB,CAQhB;AACH,GAxBL;AAyBH,CA3BD;;AA6BA,eAAeb,UAAf","sourcesContent":["import { getAuth, signInWithPopup, GithubAuthProvider } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC1Ybbqn2ZgdXsJcnSDKWer0Zx3-Qv0ROM\",\n    authDomain: \"repo-improv.firebaseapp.com\",\n    projectId: \"repo-improv\",\n    storageBucket: \"repo-improv.appspot.com\",\n    messagingSenderId: \"326241984035\",\n    appId: \"1:326241984035:web:ade250b2bc59dc8763db96\",\n    measurementId: \"G-B09R5NFKVV\"\n  };\n  \n  // Initialize Firebase\n  const app = initializeApp(firebaseConfig);\n  const analytics = getAnalytics(app);\n\n\nconst signInAuth = (provider) => {\n    const auth = getAuth();\n    signInWithPopup(auth, provider)\n        .then((result) => {\n            // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n            const credential = GithubAuthProvider.credentialFromResult(result);\n         const token = credential.accessToken;\n            console.log(token)\n/* \n            localStorage.setItem(\"token\", token); */\n\n            // The signed-in user info.\n            const user = result.user;\n            console.log(user)\n            /* \n                localStorage.setItem(\"user\" , user.displayName); */\n            // ...\n        }).catch((error) => {\n            // Handle Errors here.\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            // The email of the user's account used.\n            const email = error.email;\n            // The AuthCredential type that was used.\n            const credential = GithubAuthProvider.credentialFromError(error);\n            // ...\n        });\n}\n\nexport default signInAuth;"]},"metadata":{},"sourceType":"module"}