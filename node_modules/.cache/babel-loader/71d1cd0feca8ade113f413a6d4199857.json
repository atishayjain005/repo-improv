{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @emails oncall+relay\n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar OperationExecutor = require('./OperationExecutor');\n\nvar RelayDefaultHandlerProvider = require('../handlers/RelayDefaultHandlerProvider');\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar RelayObservable = require('../network/RelayObservable');\n\nvar RelayOperationTracker = require('../store/RelayOperationTracker');\n\nvar RelayPublishQueue = require('./RelayPublishQueue');\n\nvar RelayRecordSource = require('./RelayRecordSource');\n\nvar defaultGetDataID = require('./defaultGetDataID');\n\nvar defaultRequiredFieldLogger = require('./defaultRequiredFieldLogger');\n\nvar invariant = require('invariant');\n\nvar registerEnvironmentWithDevTools = require('../util/registerEnvironmentWithDevTools');\n\nvar wrapNetworkWithLogObserver = require('../network/wrapNetworkWithLogObserver');\n\nvar _require = require('../multi-actor-environment/ActorIdentifier'),\n    INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = _require.INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n    assertInternalActorIndentifier = _require.assertInternalActorIndentifier;\n\nvar RelayModernEnvironment = /*#__PURE__*/function () {\n  function RelayModernEnvironment(config) {\n    var _this = this;\n\n    var _config$log, _config$requiredField, _config$UNSTABLE_defa, _config$getDataID, _config$handlerProvid, _config$scheduler, _config$isServer, _config$operationTrac;\n\n    this.configName = config.configName;\n    this._treatMissingFieldsAsNull = config.treatMissingFieldsAsNull === true;\n    var operationLoader = config.operationLoader;\n    var reactFlightPayloadDeserializer = config.reactFlightPayloadDeserializer;\n    var reactFlightServerErrorHandler = config.reactFlightServerErrorHandler;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (operationLoader != null) {\n        !(typeof operationLoader === 'object' && typeof operationLoader.get === 'function' && typeof operationLoader.load === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected `operationLoader` to be an object ' + 'with get() and load() functions, got `%s`.', operationLoader) : invariant(false) : void 0;\n      }\n\n      if (reactFlightPayloadDeserializer != null) {\n        !(typeof reactFlightPayloadDeserializer === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected `reactFlightPayloadDeserializer` ' + ' to be a function, got `%s`.', reactFlightPayloadDeserializer) : invariant(false) : void 0;\n      }\n    }\n\n    this.__log = (_config$log = config.log) !== null && _config$log !== void 0 ? _config$log : emptyFunction;\n    this.requiredFieldLogger = (_config$requiredField = config.requiredFieldLogger) !== null && _config$requiredField !== void 0 ? _config$requiredField : defaultRequiredFieldLogger;\n    this._defaultRenderPolicy = ((_config$UNSTABLE_defa = config.UNSTABLE_defaultRenderPolicy) !== null && _config$UNSTABLE_defa !== void 0 ? _config$UNSTABLE_defa : RelayFeatureFlags.ENABLE_PARTIAL_RENDERING_DEFAULT === true) ? 'partial' : 'full';\n    this._operationLoader = operationLoader;\n    this._operationExecutions = new Map();\n    this._network = wrapNetworkWithLogObserver(this, config.network);\n    this._getDataID = (_config$getDataID = config.getDataID) !== null && _config$getDataID !== void 0 ? _config$getDataID : defaultGetDataID;\n    this._publishQueue = new RelayPublishQueue(config.store, (_config$handlerProvid = config.handlerProvider) !== null && _config$handlerProvid !== void 0 ? _config$handlerProvid : RelayDefaultHandlerProvider, this._getDataID);\n    this._scheduler = (_config$scheduler = config.scheduler) !== null && _config$scheduler !== void 0 ? _config$scheduler : null;\n    this._store = config.store;\n    this.options = config.options;\n    this._isServer = (_config$isServer = config.isServer) !== null && _config$isServer !== void 0 ? _config$isServer : false;\n\n    this.__setNet = function (newNet) {\n      return _this._network = wrapNetworkWithLogObserver(_this, newNet);\n    };\n\n    if (process.env.NODE_ENV !== \"production\") {\n      var _require2 = require('./StoreInspector'),\n          inspect = _require2.inspect;\n\n      this.DEBUG_inspect = function (dataID) {\n        return inspect(_this, dataID);\n      };\n    }\n\n    this._missingFieldHandlers = config.missingFieldHandlers;\n    this._operationTracker = (_config$operationTrac = config.operationTracker) !== null && _config$operationTrac !== void 0 ? _config$operationTrac : new RelayOperationTracker();\n    this._reactFlightPayloadDeserializer = reactFlightPayloadDeserializer;\n    this._reactFlightServerErrorHandler = reactFlightServerErrorHandler;\n    this._shouldProcessClientComponents = config.shouldProcessClientComponents; // Register this Relay Environment with Relay DevTools if it exists.\n    // Note: this must always be the last step in the constructor.\n\n    registerEnvironmentWithDevTools(this);\n  }\n\n  var _proto = RelayModernEnvironment.prototype;\n\n  _proto.getStore = function getStore() {\n    return this._store;\n  };\n\n  _proto.getNetwork = function getNetwork() {\n    return this._network;\n  };\n\n  _proto.getOperationTracker = function getOperationTracker() {\n    return this._operationTracker;\n  };\n\n  _proto.isRequestActive = function isRequestActive(requestIdentifier) {\n    var activeState = this._operationExecutions.get(requestIdentifier);\n\n    return activeState === 'active';\n  };\n\n  _proto.UNSTABLE_getDefaultRenderPolicy = function UNSTABLE_getDefaultRenderPolicy() {\n    return this._defaultRenderPolicy;\n  };\n\n  _proto.applyUpdate = function applyUpdate(optimisticUpdate) {\n    var _this2 = this;\n\n    var dispose = function dispose() {\n      _this2._scheduleUpdates(function () {\n        _this2._publishQueue.revertUpdate(optimisticUpdate);\n\n        _this2._publishQueue.run();\n      });\n    };\n\n    this._scheduleUpdates(function () {\n      _this2._publishQueue.applyUpdate(optimisticUpdate);\n\n      _this2._publishQueue.run();\n    });\n\n    return {\n      dispose: dispose\n    };\n  };\n\n  _proto.revertUpdate = function revertUpdate(update) {\n    var _this3 = this;\n\n    this._scheduleUpdates(function () {\n      _this3._publishQueue.revertUpdate(update);\n\n      _this3._publishQueue.run();\n    });\n  };\n\n  _proto.replaceUpdate = function replaceUpdate(update, newUpdate) {\n    var _this4 = this;\n\n    this._scheduleUpdates(function () {\n      _this4._publishQueue.revertUpdate(update);\n\n      _this4._publishQueue.applyUpdate(newUpdate);\n\n      _this4._publishQueue.run();\n    });\n  };\n\n  _proto.applyMutation = function applyMutation(optimisticConfig) {\n    var subscription = this._execute({\n      createSource: function createSource() {\n        return RelayObservable.create(function (_sink) {});\n      },\n      isClientPayload: false,\n      operation: optimisticConfig.operation,\n      optimisticConfig: optimisticConfig,\n      updater: null\n    }).subscribe({});\n\n    return {\n      dispose: function dispose() {\n        return subscription.unsubscribe();\n      }\n    };\n  };\n\n  _proto.check = function check(operation) {\n    if (this._missingFieldHandlers == null || this._missingFieldHandlers.length === 0) {\n      return this._store.check(operation);\n    }\n\n    return this._checkSelectorAndHandleMissingFields(operation, this._missingFieldHandlers);\n  };\n\n  _proto.commitPayload = function commitPayload(operation, payload) {\n    this._execute({\n      createSource: function createSource() {\n        return RelayObservable.from({\n          data: payload\n        });\n      },\n      isClientPayload: true,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    }).subscribe({});\n  };\n\n  _proto.commitUpdate = function commitUpdate(updater) {\n    var _this5 = this;\n\n    this._scheduleUpdates(function () {\n      _this5._publishQueue.commitUpdate(updater);\n\n      _this5._publishQueue.run();\n    });\n  };\n\n  _proto.lookup = function lookup(readSelector) {\n    return this._store.lookup(readSelector);\n  };\n\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    return this._store.subscribe(snapshot, callback);\n  };\n\n  _proto.retain = function retain(operation) {\n    return this._store.retain(operation);\n  };\n\n  _proto.isServer = function isServer() {\n    return this._isServer;\n  };\n\n  _proto._checkSelectorAndHandleMissingFields = function _checkSelectorAndHandleMissingFields(operation, handlers) {\n    var _this6 = this;\n\n    var target = RelayRecordSource.create();\n\n    var source = this._store.getSource();\n\n    var result = this._store.check(operation, {\n      handlers: handlers,\n      defaultActorIdentifier: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n      getSourceForActor: function getSourceForActor(actorIdentifier) {\n        assertInternalActorIndentifier(actorIdentifier);\n        return source;\n      },\n      getTargetForActor: function getTargetForActor(actorIdentifier) {\n        assertInternalActorIndentifier(actorIdentifier);\n        return target;\n      }\n    });\n\n    if (target.size() > 0) {\n      this._scheduleUpdates(function () {\n        _this6._publishQueue.commitSource(target);\n\n        _this6._publishQueue.run();\n      });\n    }\n\n    return result;\n  };\n\n  _proto._scheduleUpdates = function _scheduleUpdates(task) {\n    var scheduler = this._scheduler;\n\n    if (scheduler != null) {\n      scheduler.schedule(task);\n    } else {\n      task();\n    }\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query or Subscription operation, each result of which is then\n   * normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to: environment.execute({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.execute = function execute(_ref) {\n    var _this7 = this;\n\n    var operation = _ref.operation,\n        updater = _ref.updater;\n    return this._execute({\n      createSource: function createSource() {\n        return _this7._network.execute(operation.request.node.params, operation.request.variables, operation.request.cacheConfig || {}, null);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: updater\n    });\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Mutation operation, the result of which is then normalized and\n   * committed to the publish queue along with an optional optimistic response\n   * or updater.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeMutation({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.executeMutation = function executeMutation(_ref2) {\n    var _this8 = this;\n\n    var operation = _ref2.operation,\n        optimisticResponse = _ref2.optimisticResponse,\n        optimisticUpdater = _ref2.optimisticUpdater,\n        updater = _ref2.updater,\n        uploadables = _ref2.uploadables;\n    var optimisticConfig;\n\n    if (optimisticResponse || optimisticUpdater) {\n      optimisticConfig = {\n        operation: operation,\n        response: optimisticResponse,\n        updater: optimisticUpdater\n      };\n    }\n\n    return this._execute({\n      createSource: function createSource() {\n        return _this8._network.execute(operation.request.node.params, operation.request.variables, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, operation.request.cacheConfig), {}, {\n          force: true\n        }), uploadables);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: optimisticConfig,\n      updater: updater\n    });\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query or Subscription operation responses, the result of which is\n   * then normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeWithSource({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.executeWithSource = function executeWithSource(_ref3) {\n    var operation = _ref3.operation,\n        source = _ref3.source;\n    return this._execute({\n      createSource: function createSource() {\n        return source;\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    });\n  };\n\n  _proto.toJSON = function toJSON() {\n    var _this$configName;\n\n    return \"RelayModernEnvironment(\".concat((_this$configName = this.configName) !== null && _this$configName !== void 0 ? _this$configName : '', \")\");\n  };\n\n  _proto._execute = function _execute(_ref4) {\n    var _this9 = this;\n\n    var createSource = _ref4.createSource,\n        isClientPayload = _ref4.isClientPayload,\n        operation = _ref4.operation,\n        optimisticConfig = _ref4.optimisticConfig,\n        updater = _ref4.updater;\n    var publishQueue = this._publishQueue;\n    var store = this._store;\n    return RelayObservable.create(function (sink) {\n      var executor = OperationExecutor.execute({\n        actorIdentifier: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n        getDataID: _this9._getDataID,\n        isClientPayload: isClientPayload,\n        log: _this9.__log,\n        operation: operation,\n        operationExecutions: _this9._operationExecutions,\n        operationLoader: _this9._operationLoader,\n        operationTracker: _this9._operationTracker,\n        optimisticConfig: optimisticConfig,\n        getPublishQueue: function getPublishQueue(actorIdentifier) {\n          assertInternalActorIndentifier(actorIdentifier);\n          return publishQueue;\n        },\n        reactFlightPayloadDeserializer: _this9._reactFlightPayloadDeserializer,\n        reactFlightServerErrorHandler: _this9._reactFlightServerErrorHandler,\n        scheduler: _this9._scheduler,\n        shouldProcessClientComponents: _this9._shouldProcessClientComponents,\n        sink: sink,\n        // NOTE: Some product tests expect `Network.execute` to be called only\n        //       when the Observable is executed.\n        source: createSource(),\n        getStore: function getStore(actorIdentifier) {\n          assertInternalActorIndentifier(actorIdentifier);\n          return store;\n        },\n        treatMissingFieldsAsNull: _this9._treatMissingFieldsAsNull,\n        updater: updater\n      });\n      return function () {\n        return executor.cancel();\n      };\n    });\n  };\n\n  return RelayModernEnvironment;\n}(); // Add a sigil for detection by `isRelayModernEnvironment()` to avoid a\n// realm-specific instanceof check, and to aid in module tree-shaking to\n// avoid requiring all of RelayRuntime just to detect its environment.\n\n\nRelayModernEnvironment.prototype['@@RelayModernEnvironment'] = true;\n\nfunction emptyFunction() {}\n\nmodule.exports = RelayModernEnvironment;","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/node_modules/relay-runtime/lib/store/RelayModernEnvironment.js"],"names":["_interopRequireDefault","require","_objectSpread2","OperationExecutor","RelayDefaultHandlerProvider","RelayFeatureFlags","RelayObservable","RelayOperationTracker","RelayPublishQueue","RelayRecordSource","defaultGetDataID","defaultRequiredFieldLogger","invariant","registerEnvironmentWithDevTools","wrapNetworkWithLogObserver","_require","INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE","assertInternalActorIndentifier","RelayModernEnvironment","config","_this","_config$log","_config$requiredField","_config$UNSTABLE_defa","_config$getDataID","_config$handlerProvid","_config$scheduler","_config$isServer","_config$operationTrac","configName","_treatMissingFieldsAsNull","treatMissingFieldsAsNull","operationLoader","reactFlightPayloadDeserializer","reactFlightServerErrorHandler","process","env","NODE_ENV","get","load","__log","log","emptyFunction","requiredFieldLogger","_defaultRenderPolicy","UNSTABLE_defaultRenderPolicy","ENABLE_PARTIAL_RENDERING_DEFAULT","_operationLoader","_operationExecutions","Map","_network","network","_getDataID","getDataID","_publishQueue","store","handlerProvider","_scheduler","scheduler","_store","options","_isServer","isServer","__setNet","newNet","_require2","inspect","DEBUG_inspect","dataID","_missingFieldHandlers","missingFieldHandlers","_operationTracker","operationTracker","_reactFlightPayloadDeserializer","_reactFlightServerErrorHandler","_shouldProcessClientComponents","shouldProcessClientComponents","_proto","prototype","getStore","getNetwork","getOperationTracker","isRequestActive","requestIdentifier","activeState","UNSTABLE_getDefaultRenderPolicy","applyUpdate","optimisticUpdate","_this2","dispose","_scheduleUpdates","revertUpdate","run","update","_this3","replaceUpdate","newUpdate","_this4","applyMutation","optimisticConfig","subscription","_execute","createSource","create","_sink","isClientPayload","operation","updater","subscribe","unsubscribe","check","length","_checkSelectorAndHandleMissingFields","commitPayload","payload","from","data","commitUpdate","_this5","lookup","readSelector","snapshot","callback","retain","handlers","_this6","target","source","getSource","result","defaultActorIdentifier","getSourceForActor","actorIdentifier","getTargetForActor","size","commitSource","task","schedule","execute","_ref","_this7","request","node","params","variables","cacheConfig","executeMutation","_ref2","_this8","optimisticResponse","optimisticUpdater","uploadables","response","force","executeWithSource","_ref3","toJSON","_this$configName","concat","_ref4","_this9","publishQueue","sink","executor","operationExecutions","getPublishQueue","cancel","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @emails oncall+relay\n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar OperationExecutor = require('./OperationExecutor');\n\nvar RelayDefaultHandlerProvider = require('../handlers/RelayDefaultHandlerProvider');\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar RelayObservable = require('../network/RelayObservable');\n\nvar RelayOperationTracker = require('../store/RelayOperationTracker');\n\nvar RelayPublishQueue = require('./RelayPublishQueue');\n\nvar RelayRecordSource = require('./RelayRecordSource');\n\nvar defaultGetDataID = require('./defaultGetDataID');\n\nvar defaultRequiredFieldLogger = require('./defaultRequiredFieldLogger');\n\nvar invariant = require('invariant');\n\nvar registerEnvironmentWithDevTools = require('../util/registerEnvironmentWithDevTools');\n\nvar wrapNetworkWithLogObserver = require('../network/wrapNetworkWithLogObserver');\n\nvar _require = require('../multi-actor-environment/ActorIdentifier'),\n    INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = _require.INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n    assertInternalActorIndentifier = _require.assertInternalActorIndentifier;\n\nvar RelayModernEnvironment = /*#__PURE__*/function () {\n  function RelayModernEnvironment(config) {\n    var _this = this;\n\n    var _config$log, _config$requiredField, _config$UNSTABLE_defa, _config$getDataID, _config$handlerProvid, _config$scheduler, _config$isServer, _config$operationTrac;\n\n    this.configName = config.configName;\n    this._treatMissingFieldsAsNull = config.treatMissingFieldsAsNull === true;\n    var operationLoader = config.operationLoader;\n    var reactFlightPayloadDeserializer = config.reactFlightPayloadDeserializer;\n    var reactFlightServerErrorHandler = config.reactFlightServerErrorHandler;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (operationLoader != null) {\n        !(typeof operationLoader === 'object' && typeof operationLoader.get === 'function' && typeof operationLoader.load === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected `operationLoader` to be an object ' + 'with get() and load() functions, got `%s`.', operationLoader) : invariant(false) : void 0;\n      }\n\n      if (reactFlightPayloadDeserializer != null) {\n        !(typeof reactFlightPayloadDeserializer === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected `reactFlightPayloadDeserializer` ' + ' to be a function, got `%s`.', reactFlightPayloadDeserializer) : invariant(false) : void 0;\n      }\n    }\n\n    this.__log = (_config$log = config.log) !== null && _config$log !== void 0 ? _config$log : emptyFunction;\n    this.requiredFieldLogger = (_config$requiredField = config.requiredFieldLogger) !== null && _config$requiredField !== void 0 ? _config$requiredField : defaultRequiredFieldLogger;\n    this._defaultRenderPolicy = ((_config$UNSTABLE_defa = config.UNSTABLE_defaultRenderPolicy) !== null && _config$UNSTABLE_defa !== void 0 ? _config$UNSTABLE_defa : RelayFeatureFlags.ENABLE_PARTIAL_RENDERING_DEFAULT === true) ? 'partial' : 'full';\n    this._operationLoader = operationLoader;\n    this._operationExecutions = new Map();\n    this._network = wrapNetworkWithLogObserver(this, config.network);\n    this._getDataID = (_config$getDataID = config.getDataID) !== null && _config$getDataID !== void 0 ? _config$getDataID : defaultGetDataID;\n    this._publishQueue = new RelayPublishQueue(config.store, (_config$handlerProvid = config.handlerProvider) !== null && _config$handlerProvid !== void 0 ? _config$handlerProvid : RelayDefaultHandlerProvider, this._getDataID);\n    this._scheduler = (_config$scheduler = config.scheduler) !== null && _config$scheduler !== void 0 ? _config$scheduler : null;\n    this._store = config.store;\n    this.options = config.options;\n    this._isServer = (_config$isServer = config.isServer) !== null && _config$isServer !== void 0 ? _config$isServer : false;\n\n    this.__setNet = function (newNet) {\n      return _this._network = wrapNetworkWithLogObserver(_this, newNet);\n    };\n\n    if (process.env.NODE_ENV !== \"production\") {\n      var _require2 = require('./StoreInspector'),\n          inspect = _require2.inspect;\n\n      this.DEBUG_inspect = function (dataID) {\n        return inspect(_this, dataID);\n      };\n    }\n\n    this._missingFieldHandlers = config.missingFieldHandlers;\n    this._operationTracker = (_config$operationTrac = config.operationTracker) !== null && _config$operationTrac !== void 0 ? _config$operationTrac : new RelayOperationTracker();\n    this._reactFlightPayloadDeserializer = reactFlightPayloadDeserializer;\n    this._reactFlightServerErrorHandler = reactFlightServerErrorHandler;\n    this._shouldProcessClientComponents = config.shouldProcessClientComponents; // Register this Relay Environment with Relay DevTools if it exists.\n    // Note: this must always be the last step in the constructor.\n\n    registerEnvironmentWithDevTools(this);\n  }\n\n  var _proto = RelayModernEnvironment.prototype;\n\n  _proto.getStore = function getStore() {\n    return this._store;\n  };\n\n  _proto.getNetwork = function getNetwork() {\n    return this._network;\n  };\n\n  _proto.getOperationTracker = function getOperationTracker() {\n    return this._operationTracker;\n  };\n\n  _proto.isRequestActive = function isRequestActive(requestIdentifier) {\n    var activeState = this._operationExecutions.get(requestIdentifier);\n\n    return activeState === 'active';\n  };\n\n  _proto.UNSTABLE_getDefaultRenderPolicy = function UNSTABLE_getDefaultRenderPolicy() {\n    return this._defaultRenderPolicy;\n  };\n\n  _proto.applyUpdate = function applyUpdate(optimisticUpdate) {\n    var _this2 = this;\n\n    var dispose = function dispose() {\n      _this2._scheduleUpdates(function () {\n        _this2._publishQueue.revertUpdate(optimisticUpdate);\n\n        _this2._publishQueue.run();\n      });\n    };\n\n    this._scheduleUpdates(function () {\n      _this2._publishQueue.applyUpdate(optimisticUpdate);\n\n      _this2._publishQueue.run();\n    });\n\n    return {\n      dispose: dispose\n    };\n  };\n\n  _proto.revertUpdate = function revertUpdate(update) {\n    var _this3 = this;\n\n    this._scheduleUpdates(function () {\n      _this3._publishQueue.revertUpdate(update);\n\n      _this3._publishQueue.run();\n    });\n  };\n\n  _proto.replaceUpdate = function replaceUpdate(update, newUpdate) {\n    var _this4 = this;\n\n    this._scheduleUpdates(function () {\n      _this4._publishQueue.revertUpdate(update);\n\n      _this4._publishQueue.applyUpdate(newUpdate);\n\n      _this4._publishQueue.run();\n    });\n  };\n\n  _proto.applyMutation = function applyMutation(optimisticConfig) {\n    var subscription = this._execute({\n      createSource: function createSource() {\n        return RelayObservable.create(function (_sink) {});\n      },\n      isClientPayload: false,\n      operation: optimisticConfig.operation,\n      optimisticConfig: optimisticConfig,\n      updater: null\n    }).subscribe({});\n\n    return {\n      dispose: function dispose() {\n        return subscription.unsubscribe();\n      }\n    };\n  };\n\n  _proto.check = function check(operation) {\n    if (this._missingFieldHandlers == null || this._missingFieldHandlers.length === 0) {\n      return this._store.check(operation);\n    }\n\n    return this._checkSelectorAndHandleMissingFields(operation, this._missingFieldHandlers);\n  };\n\n  _proto.commitPayload = function commitPayload(operation, payload) {\n    this._execute({\n      createSource: function createSource() {\n        return RelayObservable.from({\n          data: payload\n        });\n      },\n      isClientPayload: true,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    }).subscribe({});\n  };\n\n  _proto.commitUpdate = function commitUpdate(updater) {\n    var _this5 = this;\n\n    this._scheduleUpdates(function () {\n      _this5._publishQueue.commitUpdate(updater);\n\n      _this5._publishQueue.run();\n    });\n  };\n\n  _proto.lookup = function lookup(readSelector) {\n    return this._store.lookup(readSelector);\n  };\n\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    return this._store.subscribe(snapshot, callback);\n  };\n\n  _proto.retain = function retain(operation) {\n    return this._store.retain(operation);\n  };\n\n  _proto.isServer = function isServer() {\n    return this._isServer;\n  };\n\n  _proto._checkSelectorAndHandleMissingFields = function _checkSelectorAndHandleMissingFields(operation, handlers) {\n    var _this6 = this;\n\n    var target = RelayRecordSource.create();\n\n    var source = this._store.getSource();\n\n    var result = this._store.check(operation, {\n      handlers: handlers,\n      defaultActorIdentifier: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n      getSourceForActor: function getSourceForActor(actorIdentifier) {\n        assertInternalActorIndentifier(actorIdentifier);\n        return source;\n      },\n      getTargetForActor: function getTargetForActor(actorIdentifier) {\n        assertInternalActorIndentifier(actorIdentifier);\n        return target;\n      }\n    });\n\n    if (target.size() > 0) {\n      this._scheduleUpdates(function () {\n        _this6._publishQueue.commitSource(target);\n\n        _this6._publishQueue.run();\n      });\n    }\n\n    return result;\n  };\n\n  _proto._scheduleUpdates = function _scheduleUpdates(task) {\n    var scheduler = this._scheduler;\n\n    if (scheduler != null) {\n      scheduler.schedule(task);\n    } else {\n      task();\n    }\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query or Subscription operation, each result of which is then\n   * normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to: environment.execute({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.execute = function execute(_ref) {\n    var _this7 = this;\n\n    var operation = _ref.operation,\n        updater = _ref.updater;\n    return this._execute({\n      createSource: function createSource() {\n        return _this7._network.execute(operation.request.node.params, operation.request.variables, operation.request.cacheConfig || {}, null);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: updater\n    });\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Mutation operation, the result of which is then normalized and\n   * committed to the publish queue along with an optional optimistic response\n   * or updater.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeMutation({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.executeMutation = function executeMutation(_ref2) {\n    var _this8 = this;\n\n    var operation = _ref2.operation,\n        optimisticResponse = _ref2.optimisticResponse,\n        optimisticUpdater = _ref2.optimisticUpdater,\n        updater = _ref2.updater,\n        uploadables = _ref2.uploadables;\n    var optimisticConfig;\n\n    if (optimisticResponse || optimisticUpdater) {\n      optimisticConfig = {\n        operation: operation,\n        response: optimisticResponse,\n        updater: optimisticUpdater\n      };\n    }\n\n    return this._execute({\n      createSource: function createSource() {\n        return _this8._network.execute(operation.request.node.params, operation.request.variables, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, operation.request.cacheConfig), {}, {\n          force: true\n        }), uploadables);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: optimisticConfig,\n      updater: updater\n    });\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query or Subscription operation responses, the result of which is\n   * then normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeWithSource({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.executeWithSource = function executeWithSource(_ref3) {\n    var operation = _ref3.operation,\n        source = _ref3.source;\n    return this._execute({\n      createSource: function createSource() {\n        return source;\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    });\n  };\n\n  _proto.toJSON = function toJSON() {\n    var _this$configName;\n\n    return \"RelayModernEnvironment(\".concat((_this$configName = this.configName) !== null && _this$configName !== void 0 ? _this$configName : '', \")\");\n  };\n\n  _proto._execute = function _execute(_ref4) {\n    var _this9 = this;\n\n    var createSource = _ref4.createSource,\n        isClientPayload = _ref4.isClientPayload,\n        operation = _ref4.operation,\n        optimisticConfig = _ref4.optimisticConfig,\n        updater = _ref4.updater;\n    var publishQueue = this._publishQueue;\n    var store = this._store;\n    return RelayObservable.create(function (sink) {\n      var executor = OperationExecutor.execute({\n        actorIdentifier: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n        getDataID: _this9._getDataID,\n        isClientPayload: isClientPayload,\n        log: _this9.__log,\n        operation: operation,\n        operationExecutions: _this9._operationExecutions,\n        operationLoader: _this9._operationLoader,\n        operationTracker: _this9._operationTracker,\n        optimisticConfig: optimisticConfig,\n        getPublishQueue: function getPublishQueue(actorIdentifier) {\n          assertInternalActorIndentifier(actorIdentifier);\n          return publishQueue;\n        },\n        reactFlightPayloadDeserializer: _this9._reactFlightPayloadDeserializer,\n        reactFlightServerErrorHandler: _this9._reactFlightServerErrorHandler,\n        scheduler: _this9._scheduler,\n        shouldProcessClientComponents: _this9._shouldProcessClientComponents,\n        sink: sink,\n        // NOTE: Some product tests expect `Network.execute` to be called only\n        //       when the Observable is executed.\n        source: createSource(),\n        getStore: function getStore(actorIdentifier) {\n          assertInternalActorIndentifier(actorIdentifier);\n          return store;\n        },\n        treatMissingFieldsAsNull: _this9._treatMissingFieldsAsNull,\n        updater: updater\n      });\n      return function () {\n        return executor.cancel();\n      };\n    });\n  };\n\n  return RelayModernEnvironment;\n}(); // Add a sigil for detection by `isRelayModernEnvironment()` to avoid a\n// realm-specific instanceof check, and to aid in module tree-shaking to\n// avoid requiring all of RelayRuntime just to detect its environment.\n\n\nRelayModernEnvironment.prototype['@@RelayModernEnvironment'] = true;\n\nfunction emptyFunction() {}\n\nmodule.exports = RelayModernEnvironment;"]},"metadata":{},"sourceType":"script"}