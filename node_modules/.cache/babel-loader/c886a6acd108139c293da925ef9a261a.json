{"ast":null,"code":"var _GitDataRepositoryNameQuery,\n    _jsxFileName = \"/home/akshay/Atishay/appointy-screening/src/route/GitData.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { RelayEnvironmentProvider, loadQuery, usePreloadedQuery } from \"react-relay/hooks\";\n/* \nimport RelayEnvironment from \"../RelayEnvironment\"; */\n\nimport { Button, Container, Box, Typography } from \"@mui/material\";\nimport { Environment, Network, RecordSource, Store } from 'relay-runtime';\nimport FetchGraphQL from '../FetchGraphQL';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Suspense\n} = React;\nconst RepositoryNameQuery = _GitDataRepositoryNameQuery !== void 0 ? _GitDataRepositoryNameQuery : (_GitDataRepositoryNameQuery = require(\"./__generated__/GitDataRepositoryNameQuery.graphql\"), _GitDataRepositoryNameQuery.hash && _GitDataRepositoryNameQuery.hash !== \"4e29b0bfb329842624f9c347ccf7c975\" && console.error(\"The definition of 'GitDataRepositoryNameQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _GitDataRepositoryNameQuery);\n\nasync function fetchRelay(params, variables) {\n  console.log(`fetching query ${params.name} with ${JSON.stringify(variables)}`);\n  return await FetchGraphQL(params.text, variables);\n} // Export a singleton instance of Relay Environment configured with our network function:\n\n\nconst env = new Environment({\n  network: Network.create(fetchRelay),\n  store: new Store(new RecordSource())\n});\nconst preloadedQuery = loadQuery(env, RepositoryNameQuery, {\n  usr: localStorage.getItem(\"user\")\n});\n\nfunction GitData(props) {\n  _s();\n\n  const data = usePreloadedQuery(RepositoryNameQuery, props.preloadedQuery);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"lightgrey\",\n        my: 10,\n        sx: {\n          fontSize: 72,\n          fontWeight: 900\n        },\n        children: [\"Make changes in your GitHub repository directly\", /*#__PURE__*/_jsxDEV(Typography, {\n          mt: 2,\n          children: \"Just a simple web-app where you can edit the name of your GitHub repository or Delete it. You can make some minor changes.Just a simple web-app where you can edit the name of your GitHub repository or Delete it. You can make some minor changesJust a simple web-app where you can edit the name of your GitHub repository or Delete it. You can make some minor changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: data.user.repositories.nodes.map(data => {\n          return /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), console.log(data.name)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GitData, \"gOoAgDlVPdxEXFj+8uugLFK2myc=\", false, function () {\n  return [usePreloadedQuery];\n});\n\n_c = GitData;\n\nfunction GitDataRoot(props) {\n  return /*#__PURE__*/_jsxDEV(RelayEnvironmentProvider, {\n    environment: env,\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: \"Loading...\",\n      children: /*#__PURE__*/_jsxDEV(GitData, {\n        preloadedQuery: preloadedQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = GitDataRoot;\nexport default GitDataRoot;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GitData\");\n$RefreshReg$(_c2, \"GitDataRoot\");","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/src/route/GitData.jsx"],"names":["React","RelayEnvironmentProvider","loadQuery","usePreloadedQuery","Button","Container","Box","Typography","Environment","Network","RecordSource","Store","FetchGraphQL","Suspense","RepositoryNameQuery","fetchRelay","params","variables","console","log","name","JSON","stringify","text","env","network","create","store","preloadedQuery","usr","localStorage","getItem","GitData","props","data","fontSize","fontWeight","user","repositories","nodes","map","GitDataRoot"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport {\n  RelayEnvironmentProvider,\n  loadQuery,\n  usePreloadedQuery,\n} from \"react-relay/hooks\";/* \nimport RelayEnvironment from \"../RelayEnvironment\"; */\nimport { Button, Container, Box, Typography } from \"@mui/material\";\nimport {Environment, Network, RecordSource, Store} from 'relay-runtime';\nimport FetchGraphQL from '../FetchGraphQL';\n\nconst { Suspense } = React;\n\n\n\nconst RepositoryNameQuery = graphql`\n  query GitDataRepositoryNameQuery {\n    user(login: \"atishayjain005\") {\n      repositories(first: 10, orderBy: { field: CREATED_AT, direction: DESC }) {\n        nodes {\n          name\n          pushedAt\n          id\n        }\n      }\n    }\n  }\n`;\n\nasync function fetchRelay(params, variables) {\n  console.log(`fetching query ${params.name} with ${JSON.stringify(variables)}`);\n  return await FetchGraphQL(params.text, variables);\n}\n\n// Export a singleton instance of Relay Environment configured with our network function:\nconst env = new Environment({\n  network: Network.create(fetchRelay),\n  store: new Store(new RecordSource()),\n});\n\nconst preloadedQuery = loadQuery(env, RepositoryNameQuery, {\nusr : localStorage.getItem(\"user\")\n});\n\nfunction GitData(props) {\n  const data = usePreloadedQuery(RepositoryNameQuery, props.preloadedQuery);\n  return (\n    <Container>\n      <Box>\n        <Typography\n          color=\"lightgrey\"\n          my={10}\n          sx={{ fontSize: 72, fontWeight: 900 }}\n        >\n          Make changes in your GitHub repository directly\n          <Typography mt={2}>\n            Just a simple web-app where you can edit the name of your GitHub\n            repository or Delete it. You can make some minor changes.Just a\n            simple web-app where you can edit the name of your GitHub repository\n            or Delete it. You can make some minor changesJust a simple web-app\n            where you can edit the name of your GitHub repository or Delete it.\n            You can make some minor changes\n          </Typography>\n        </Typography>\n        <Box>\n          {data.user.repositories.nodes.map((data) => {\n            return (\n              <Box>\n                <Box>\n                  <Typography>{data.name}</Typography>\n                  {console.log(data.name)}\n                </Box>\n              </Box>\n            );\n          })}\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nfunction GitDataRoot(props) {\n  return (\n    <RelayEnvironmentProvider environment={env}>\n      <Suspense fallback={\"Loading...\"}>\n        <GitData preloadedQuery={preloadedQuery} />\n      </Suspense>\n    </RelayEnvironmentProvider>\n  );\n}\n\nexport default GitDataRoot;\n"]},"metadata":{},"sourceType":"module"}