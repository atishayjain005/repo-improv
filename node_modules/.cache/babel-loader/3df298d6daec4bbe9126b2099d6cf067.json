{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from \"react\";\nimport TokenContext from \"./context/Token/TokenContext\";\n\nfunction FetchGraphQL() {\n  _s();\n\n  const TOKEN = useContext(TokenContext);\n  useEffect(async (text, variables) => {\n    const response = await fetch(\"https://api.github.com/graphql\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `bearer ${TOKEN.tokenValue}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: text,\n        variables\n      })\n    }); // Get the response as JSON\n\n    return await response.json();\n  }); // Fetch data from GitHub's GraphQL API:\n}\n\n_s(FetchGraphQL, \"cq1dvEi/ICsNfzX/xffre9SK/j8=\");\n\n_c = FetchGraphQL;\n;\nexport default FetchGraphQL;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchGraphQL\");","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/src/FetchGraphQL.jsx"],"names":["useContext","useState","useEffect","TokenContext","FetchGraphQL","TOKEN","text","variables","response","fetch","method","headers","Authorization","tokenValue","body","JSON","stringify","query","json"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,SAASC,YAAT,GAAuB;AAAA;;AACrB,QAAMC,KAAK,GAAGL,UAAU,CAACG,YAAD,CAAxB;AAEAD,EAAAA,SAAS,CAAC,OAAOI,IAAP,EAAaC,SAAb,KAA2B;AACnC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,MAAAA,MAAM,EAAE,MADqD;AAE7DC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASP,KAAK,CAACQ,UAAW,EADnC;AAEP,wBAAgB;AAFT,OAFoD;AAM7DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAEX,IADY;AAEnBC,QAAAA;AAFmB,OAAf;AANuD,KAAnC,CAA5B,CADmC,CAanC;;AACA,WAAO,MAAMC,QAAQ,CAACU,IAAT,EAAb;AACD,GAfQ,CAAT,CAHqB,CAoBrB;AACD;;GArBQd,Y;;KAAAA,Y;AAqBR;AAED,eAAeA,YAAf","sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport TokenContext from \"./context/Token/TokenContext\";\n\nfunction FetchGraphQL(){\n  const TOKEN = useContext(TokenContext);\n\n  useEffect(async (text, variables) => {\n    const response = await fetch(\"https://api.github.com/graphql\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `bearer ${TOKEN.tokenValue}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        query: text,\n        variables,\n      }),\n    });\n\n    // Get the response as JSON\n    return await response.json();\n  });\n\n  // Fetch data from GitHub's GraphQL API:\n};\n\nexport default FetchGraphQL;\n"]},"metadata":{},"sourceType":"module"}