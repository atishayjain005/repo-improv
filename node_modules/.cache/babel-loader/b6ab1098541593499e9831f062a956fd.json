{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Environment, Network, RecordSource, Store } from 'relay-runtime';\nimport FetchGraphQL from './FetchGraphQL';\nimport { useContext } from \"react\";\nimport TokenContext from \"./context/Token/TokenContext\"; // Relay passes a \"params\" object with the query name and text. So we define a helper function\n// to call our fetchGraphQL utility with params.text.\n\nasync function FetchRelay(params, variables) {\n  _s();\n\n  const f = useContext(TokenContext);\n  console.log(`fetching query ${params.name} with ${JSON.stringify(variables)}`);\n  return FetchGraphQL(params.text, variables);\n} // Export a singleton instance of Relay Environment configured with our network function:\n\n\n_s(FetchRelay, \"P+f0LPNczklGPxvrZAM0xND1pJE=\");\n\n_c = FetchRelay;\nexport default new Environment({\n  network: Network.create(FetchRelay),\n  store: new Store(new RecordSource())\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchRelay\");","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/src/RelayEnvironment.js"],"names":["Environment","Network","RecordSource","Store","FetchGraphQL","useContext","TokenContext","FetchRelay","params","variables","f","console","log","name","JSON","stringify","text","network","create","store"],"mappings":";;AAAA,SAAQA,WAAR,EAAqBC,OAArB,EAA8BC,YAA9B,EAA4CC,KAA5C,QAAwD,eAAxD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,UAAR,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,8BAAzB,C,CAEA;AACA;;AACA,eAAeC,UAAf,CAA0BC,MAA1B,EAAkCC,SAAlC,EAA6C;AAAA;;AAE3C,QAAMC,CAAC,GAAGL,UAAU,CAACC,YAAD,CAApB;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBJ,MAAM,CAACK,IAAK,SAAQC,IAAI,CAACC,SAAL,CAAeN,SAAf,CAA0B,EAA5E;AACA,SAAOL,YAAY,CAACI,MAAM,CAACQ,IAAR,EAAcP,SAAd,CAAnB;AACD,C,CAED;;;GAReF,U;;KAAAA,U;AASf,eAAe,IAAIP,WAAJ,CAAgB;AAC7BiB,EAAAA,OAAO,EAAEhB,OAAO,CAACiB,MAAR,CAAeX,UAAf,CADoB;AAE7BY,EAAAA,KAAK,EAAE,IAAIhB,KAAJ,CAAU,IAAID,YAAJ,EAAV;AAFsB,CAAhB,CAAf","sourcesContent":["import {Environment, Network, RecordSource, Store} from 'relay-runtime';\nimport FetchGraphQL from './FetchGraphQL';\nimport {useContext} from \"react\"\nimport TokenContext from \"./context/Token/TokenContext\"\n\n// Relay passes a \"params\" object with the query name and text. So we define a helper function\n// to call our fetchGraphQL utility with params.text.\nasync function FetchRelay(params, variables) {\n\n  const f = useContext(TokenContext);\n\n  console.log(`fetching query ${params.name} with ${JSON.stringify(variables)}`);\n  return FetchGraphQL(params.text, variables);\n}\n\n// Export a singleton instance of Relay Environment configured with our network function:\nexport default new Environment({\n  network: Network.create(FetchRelay),\n  store: new Store(new RecordSource()),\n});"]},"metadata":{},"sourceType":"module"}