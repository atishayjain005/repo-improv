{"ast":null,"code":"/* eslint-disable */\n'use strict';\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type GitDataMutationVariables = {||};\nexport type GitDataMutationResponse = {|\n  +updateRepository: ?{|\n    +repository: ?{|\n      +createdAt: any,\n      +nameWithOwner: string,\n      +name: string,\n      +id: string,\n    |}\n  |}\n|};\nexport type GitDataMutation = {|\n  variables: GitDataMutationVariables,\n  response: GitDataMutationResponse,\n|};\n*/\n\n/*\nmutation GitDataMutation {\n  updateRepository(input: {repositoryId: \"R_kgDOGTgzxA\", name: \"something\"}) {\n    repository {\n      createdAt\n      nameWithOwner\n      name\n      id\n    }\n  }\n}\n*/\n\nconst node\n/*: ConcreteRequest*/\n= function () {\n  var v0 = [{\n    \"alias\": null,\n    \"args\": [{\n      \"kind\": \"Literal\",\n      \"name\": \"input\",\n      \"value\": {\n        \"name\": \"something\",\n        \"repositoryId\": \"R_kgDOGTgzxA\"\n      }\n    }],\n    \"concreteType\": \"UpdateRepositoryPayload\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"updateRepository\",\n    \"plural\": false,\n    \"selections\": [{\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"Repository\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"repository\",\n      \"plural\": false,\n      \"selections\": [{\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"createdAt\",\n        \"storageKey\": null\n      }, {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"nameWithOwner\",\n        \"storageKey\": null\n      }, {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      }, {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"id\",\n        \"storageKey\": null\n      }],\n      \"storageKey\": null\n    }],\n    \"storageKey\": \"updateRepository(input:{\\\"name\\\":\\\"something\\\",\\\"repositoryId\\\":\\\"R_kgDOGTgzxA\\\"})\"\n  }];\n  return {\n    \"fragment\": {\n      \"argumentDefinitions\": [],\n      \"kind\": \"Fragment\",\n      \"metadata\": null,\n      \"name\": \"GitDataMutation\",\n      \"selections\": v0\n      /*: any*/\n      ,\n      \"type\": \"Mutation\",\n      \"abstractKey\": null\n    },\n    \"kind\": \"Request\",\n    \"operation\": {\n      \"argumentDefinitions\": [],\n      \"kind\": \"Operation\",\n      \"name\": \"GitDataMutation\",\n      \"selections\": v0\n      /*: any*/\n\n    },\n    \"params\": {\n      \"cacheID\": \"b8e931f0638264ef5cf735b7291766f4\",\n      \"id\": null,\n      \"metadata\": {},\n      \"name\": \"GitDataMutation\",\n      \"operationKind\": \"mutation\",\n      \"text\": \"mutation GitDataMutation {\\n  updateRepository(input: {repositoryId: \\\"R_kgDOGTgzxA\\\", name: \\\"something\\\"}) {\\n    repository {\\n      createdAt\\n      nameWithOwner\\n      name\\n      id\\n    }\\n  }\\n}\\n\"\n    }\n  };\n}(); // prettier-ignore\n\n\nnode\n/*: any*/\n.hash = 'd65e4a93efecd250b8626400adb40352';\nmodule.exports = node;","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/src/route/__generated__/GitDataMutation.graphql.js"],"names":["node","v0","hash","module","exports"],"mappings":"AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA;AAAI;AAAA,EAAyB,YAAU;AAC7C,MAAIC,EAAE,GAAG,CACP;AACE,aAAS,IADX;AAEE,YAAQ,CACN;AACE,cAAQ,SADV;AAEE,cAAQ,OAFV;AAGE,eAAS;AACP,gBAAQ,WADD;AAEP,wBAAgB;AAFT;AAHX,KADM,CAFV;AAYE,oBAAgB,yBAZlB;AAaE,YAAQ,aAbV;AAcE,YAAQ,kBAdV;AAeE,cAAU,KAfZ;AAgBE,kBAAc,CACZ;AACE,eAAS,IADX;AAEE,cAAQ,IAFV;AAGE,sBAAgB,YAHlB;AAIE,cAAQ,aAJV;AAKE,cAAQ,YALV;AAME,gBAAU,KANZ;AAOE,oBAAc,CACZ;AACE,iBAAS,IADX;AAEE,gBAAQ,IAFV;AAGE,gBAAQ,aAHV;AAIE,gBAAQ,WAJV;AAKE,sBAAc;AALhB,OADY,EAQZ;AACE,iBAAS,IADX;AAEE,gBAAQ,IAFV;AAGE,gBAAQ,aAHV;AAIE,gBAAQ,eAJV;AAKE,sBAAc;AALhB,OARY,EAeZ;AACE,iBAAS,IADX;AAEE,gBAAQ,IAFV;AAGE,gBAAQ,aAHV;AAIE,gBAAQ,MAJV;AAKE,sBAAc;AALhB,OAfY,EAsBZ;AACE,iBAAS,IADX;AAEE,gBAAQ,IAFV;AAGE,gBAAQ,aAHV;AAIE,gBAAQ,IAJV;AAKE,sBAAc;AALhB,OAtBY,CAPhB;AAqCE,oBAAc;AArChB,KADY,CAhBhB;AAyDE,kBAAc;AAzDhB,GADO,CAAT;AA6DA,SAAO;AACL,gBAAY;AACV,6BAAuB,EADb;AAEV,cAAQ,UAFE;AAGV,kBAAY,IAHF;AAIV,cAAQ,iBAJE;AAKV,oBAAeA;AAAE;AALP;AAMV,cAAQ,UANE;AAOV,qBAAe;AAPL,KADP;AAUL,YAAQ,SAVH;AAWL,iBAAa;AACX,6BAAuB,EADZ;AAEX,cAAQ,WAFG;AAGX,cAAQ,iBAHG;AAIX,oBAAeA;AAAE;;AAJN,KAXR;AAiBL,cAAU;AACR,iBAAW,kCADH;AAER,YAAM,IAFE;AAGR,kBAAY,EAHJ;AAIR,cAAQ,iBAJA;AAKR,uBAAiB,UALT;AAMR,cAAQ;AANA;AAjBL,GAAP;AA0BC,CAxFiC,EAAlC,C,CAyFA;;;AACCD;AAAI;AAAL,CAAgBE,IAAhB,GAAuB,kCAAvB;AAEAC,MAAM,CAACC,OAAP,GAAiBJ,IAAjB","sourcesContent":["/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type GitDataMutationVariables = {||};\nexport type GitDataMutationResponse = {|\n  +updateRepository: ?{|\n    +repository: ?{|\n      +createdAt: any,\n      +nameWithOwner: string,\n      +name: string,\n      +id: string,\n    |}\n  |}\n|};\nexport type GitDataMutation = {|\n  variables: GitDataMutationVariables,\n  response: GitDataMutationResponse,\n|};\n*/\n\n\n/*\nmutation GitDataMutation {\n  updateRepository(input: {repositoryId: \"R_kgDOGTgzxA\", name: \"something\"}) {\n    repository {\n      createdAt\n      nameWithOwner\n      name\n      id\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"input\",\n        \"value\": {\n          \"name\": \"something\",\n          \"repositoryId\": \"R_kgDOGTgzxA\"\n        }\n      }\n    ],\n    \"concreteType\": \"UpdateRepositoryPayload\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"updateRepository\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"Repository\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"repository\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"createdAt\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"nameWithOwner\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": \"updateRepository(input:{\\\"name\\\":\\\"something\\\",\\\"repositoryId\\\":\\\"R_kgDOGTgzxA\\\"})\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"GitDataMutation\",\n    \"selections\": (v0/*: any*/),\n    \"type\": \"Mutation\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"GitDataMutation\",\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"b8e931f0638264ef5cf735b7291766f4\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"GitDataMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation GitDataMutation {\\n  updateRepository(input: {repositoryId: \\\"R_kgDOGTgzxA\\\", name: \\\"something\\\"}) {\\n    repository {\\n      createdAt\\n      nameWithOwner\\n      name\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'd65e4a93efecd250b8626400adb40352';\n\nmodule.exports = node;\n"]},"metadata":{},"sourceType":"module"}