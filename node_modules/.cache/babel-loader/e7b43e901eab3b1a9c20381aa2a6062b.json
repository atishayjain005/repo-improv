{"ast":null,"code":"var _GitDataRepositoryNameQuery,\n    _GitDataMutation,\n    _jsxFileName = \"/home/akshay/Atishay/appointy-screening/src/route/GitData.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { RelayEnvironmentProvider, loadQuery, usePreloadedQuery } from \"react-relay/hooks\";\nimport { Button, Container, Box, Typography, Card, CardContent, CardActions, Link, TextField } from \"@mui/material\";\nimport { Environment, Network, RecordSource, Store } from \"relay-runtime\";\nimport FetchGraphQL from \"../FetchGraphQL\"; //import { Link } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Suspense\n} = React;\nconst RepositoryNameQuery = _GitDataRepositoryNameQuery !== void 0 ? _GitDataRepositoryNameQuery : (_GitDataRepositoryNameQuery = require(\"./__generated__/GitDataRepositoryNameQuery.graphql\"), _GitDataRepositoryNameQuery.hash && _GitDataRepositoryNameQuery.hash !== \"b34b784136892e534550ff497245bd0e\" && console.error(\"The definition of 'GitDataRepositoryNameQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _GitDataRepositoryNameQuery);\nconst Mutation = _GitDataMutation !== void 0 ? _GitDataMutation : (_GitDataMutation = require(\"./__generated__/GitDataMutation.graphql\"), _GitDataMutation.hash && _GitDataMutation.hash !== \"bc7081d4355e99caabc6182f008399fb\" && console.error(\"The definition of 'GitDataMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _GitDataMutation);\n\nasync function fetchRelay(params, variables) {\n  console.log(`fetching query ${params.name} with ${JSON.stringify(variables)}`);\n  return await FetchGraphQL(params.text, variables);\n} // Export a singleton instance of Relay Environment configured with our network function:\n\n\nconst env = new Environment({\n  network: Network.create(fetchRelay),\n  store: new Store(new RecordSource())\n});\nconst preloadedQuery = loadQuery(env, RepositoryNameQuery, {\n  usr: localStorage.getItem(\"user\")\n});\n\nfunction GitData(props) {\n  _s();\n\n  const data = usePreloadedQuery(RepositoryNameQuery, props.preloadedQuery);\n\n  const signOut = () => {\n    localStorage.clear();\n    window.location = \"/\";\n  };\n  /*const nameChange =()=>{\n     const [name, setName] = useState(null);\n   // When the component mounts we'll fetch a repository name\n  useEffect(() => {\n    let isMounted = true;\n    FetchGraphQL(`\n    mutation GitDataMutation($nameChange : String!) {\n      updateRepository(\n        input: { repositoryId: \"R_kgDOGTgzxA\", name: $nameChange }\n      ) {\n        repository {\n          createdAt\n          nameWithOwner\n          name\n          id\n        }\n      }\n    }\n    `).then(response => {\n      // Avoid updating state if the component unmounted before the fetch completes\n      if (!isMounted) {\n        return;\n      }\n      const data = response.data;\n      setName(data.repository.name);\n    }).catch(error => {\n      console.error(error);\n    });\n     return () => {\n      isMounted = false;\n    };\n  }, [FetchGraphQL]);\n   }*/\n\n\n  const inputName = () => {\n    const outlinedBasic = document.getElementById(\"outlined-basic\");\n    const inputValue = outlinedBasic.value;\n\n    if (inputValue.length < 4) {\n      localStorage.setItem(\"inputValue\", inputValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: data ? /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"lightgrey\",\n        my: 10,\n        sx: {\n          fontSize: 72,\n          fontWeight: 900\n        },\n        children: \"Repo-improv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: signOut,\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          alignItems: \"stretch\"\n        },\n        children: data.user.repositories.nodes.map(data => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              minWidth: 275,\n              margin: 5,\n              display: \"flex\",\n              flexDirection: \"column\",\n              flexWrap: \"wrap\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  fontSize: 14\n                },\n                color: \"text.secondary\",\n                gutterBottom: true,\n                children: data.createdAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"div\",\n                children: data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  mb: 1.5\n                },\n                color: \"text.secondary\",\n                children: data.description ? data.description : \"no description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [\"well meaning and kindly.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, this), '\"a benevolent smile\"']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: data.url,\n                  children: \"link\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"renameButton\",\n                onClick: inputName,\n                children: \"rename\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-basic\",\n                label: \"Rename app\",\n                variant: \"outlined\",\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 27\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"no data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GitData, \"gOoAgDlVPdxEXFj+8uugLFK2myc=\", false, function () {\n  return [usePreloadedQuery];\n});\n\n_c = GitData;\n\nfunction GitDataRoot(props) {\n  return /*#__PURE__*/_jsxDEV(RelayEnvironmentProvider, {\n    environment: env,\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: \"Loading...\",\n      children: /*#__PURE__*/_jsxDEV(GitData, {\n        preloadedQuery: preloadedQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = GitDataRoot;\nexport default GitDataRoot;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GitData\");\n$RefreshReg$(_c2, \"GitDataRoot\");","map":{"version":3,"sources":["/home/akshay/Atishay/appointy-screening/src/route/GitData.jsx"],"names":["React","useState","useEffect","RelayEnvironmentProvider","loadQuery","usePreloadedQuery","Button","Container","Box","Typography","Card","CardContent","CardActions","Link","TextField","Environment","Network","RecordSource","Store","FetchGraphQL","Suspense","RepositoryNameQuery","Mutation","fetchRelay","params","variables","console","log","name","JSON","stringify","text","env","network","create","store","preloadedQuery","usr","localStorage","getItem","GitData","props","data","signOut","clear","window","location","inputName","outlinedBasic","document","getElementById","inputValue","value","length","setItem","fontSize","fontWeight","display","flexDirection","flexWrap","justifyContent","alignItems","user","repositories","nodes","map","minWidth","margin","createdAt","mb","description","url","endAdornment","GitDataRoot"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport {\n  RelayEnvironmentProvider,\n  loadQuery,\n  usePreloadedQuery,\n} from \"react-relay/hooks\";\nimport {\n  Button,\n  Container,\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  CardActions,\n  Link,\n  TextField,\n} from \"@mui/material\";\nimport { Environment, Network, RecordSource, Store } from \"relay-runtime\";\nimport FetchGraphQL from \"../FetchGraphQL\";\n//import { Link } from \"react-router-dom\";\n\nconst { Suspense } = React;\n\nconst RepositoryNameQuery = graphql`\n  query GitDataRepositoryNameQuery($usr: String!) {\n    user(login: $usr) {\n      repositories(first: 10, orderBy: { field: CREATED_AT, direction: DESC }) {\n        nodes {\n          name\n          description\n          collaborators(first: 10) {\n            nodes {\n              name\n            }\n          }\n          issues(first: 10, orderBy: { field: CREATED_AT, direction: DESC }) {\n            nodes {\n              __typename\n            }\n          }\n          createdAt\n          url\n        }\n      }\n    }\n  }\n`;\n\nconst Mutation = graphql`\n  mutation GitDataMutation($nameChange: String!) {\n    updateRepository(\n      input: { repositoryId: \"R_kgDOGTgzxA\", name: $nameChange }\n    ) {\n      repository {\n        createdAt\n        nameWithOwner\n        name\n        id\n      }\n    }\n  }\n`;\n\nasync function fetchRelay(params, variables) {\n  console.log(\n    `fetching query ${params.name} with ${JSON.stringify(variables)}`\n  );\n  return await FetchGraphQL(params.text, variables);\n}\n\n// Export a singleton instance of Relay Environment configured with our network function:\nconst env = new Environment({\n  network: Network.create(fetchRelay),\n  store: new Store(new RecordSource()),\n});\n\nconst preloadedQuery = loadQuery(env, RepositoryNameQuery, {\n  usr: localStorage.getItem(\"user\"),\n});\n\nfunction GitData(props) {\n  const data = usePreloadedQuery(RepositoryNameQuery, props.preloadedQuery);\n\n  const signOut = () => {\n    localStorage.clear();\n    window.location = \"/\";\n  };\n\n  /*const nameChange =()=>{\n\n    const [name, setName] = useState(null);\n\n  // When the component mounts we'll fetch a repository name\n  useEffect(() => {\n    let isMounted = true;\n    FetchGraphQL(`\n    mutation GitDataMutation($nameChange : String!) {\n      updateRepository(\n        input: { repositoryId: \"R_kgDOGTgzxA\", name: $nameChange }\n      ) {\n        repository {\n          createdAt\n          nameWithOwner\n          name\n          id\n        }\n      }\n    }\n    `).then(response => {\n      // Avoid updating state if the component unmounted before the fetch completes\n      if (!isMounted) {\n        return;\n      }\n      const data = response.data;\n      setName(data.repository.name);\n    }).catch(error => {\n      console.error(error);\n    });\n\n    return () => {\n      isMounted = false;\n    };\n  }, [FetchGraphQL]);\n\n  }*/\n\n  const inputName = () => {\n    const outlinedBasic = document.getElementById(\"outlined-basic\");\n    const inputValue = outlinedBasic.value;\n    if (inputValue.length < 4) {\n      localStorage.setItem(\"inputValue\", inputValue);\n    }\n  };\n\n  return (\n    <Container>\n      {data ? (\n        <Box>\n          <Typography\n            color=\"lightgrey\"\n            my={10}\n            sx={{ fontSize: 72, fontWeight: 900 }}\n          >\n            Repo-improv\n          </Typography>\n          <Button variant=\"contained\" onClick={signOut}>\n            Sign Out\n          </Button>\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n              alignItems: \"stretch\",\n            }}\n          >\n            {data.user.repositories.nodes.map((data) => {\n              return (\n                <Card\n                  sx={{\n                    minWidth: 275,\n                    margin: 5,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flexWrap: \"wrap\",\n                  }}\n                >\n                  <CardContent>\n                    <Typography\n                      sx={{ fontSize: 14 }}\n                      color=\"text.secondary\"\n                      gutterBottom\n                    >\n                      {data.createdAt}\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"div\">\n                      {data.name}\n                    </Typography>\n                    <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                      {data.description ? data.description : \"no description\"}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      well meaning and kindly.\n                      <br />\n                      {'\"a benevolent smile\"'}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button>\n                      <Link href={data.url}>link</Link>\n                    </Button>\n                    <Button className=\"renameButton\" onClick={inputName}>\n                      rename\n                    </Button>\n                  </CardActions>\n                  <Box>\n                    <TextField\n                      id=\"outlined-basic\"\n                      label=\"Rename app\"\n                      variant=\"outlined\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment>\n                            <IconButton>\n                              <SearchIcon />\n                            </IconButton>\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                  </Box>\n                </Card>\n              );\n            })}\n          </Box>\n        </Box>\n      ) : (\n        <h1>no data found</h1>\n      )}\n    </Container>\n  );\n}\n\nfunction GitDataRoot(props) {\n  return (\n    <RelayEnvironmentProvider environment={env}>\n      <Suspense fallback={\"Loading...\"}>\n        <GitData preloadedQuery={preloadedQuery} />\n      </Suspense>\n    </RelayEnvironmentProvider>\n  );\n}\n\nexport default GitDataRoot;\n"]},"metadata":{},"sourceType":"module"}